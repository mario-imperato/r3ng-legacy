<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<!--
  TODO: xmlCopyRight.txt
   
  -->
<!--
  TODO: xmlReadme.txt
   
  -->

<!-- <mapper resource="org/r3/db/bbs/bbsthreadnode/BBSThreadNodeMapper.xml"/> -->
<mapper namespace="org.r3.db.bbs.bbsthreadnode.BBSThreadNodeMapper" >
    <resultMap id="BaseResultMap" type="org.r3.db.bbs.bbsthreadnode.BBSThreadNodeDTO" >
         <id column="threadnodeid" property="threadnodeid" jdbcType="VARCHAR" />
           <result column="site" property="site" jdbcType="VARCHAR" />
           <result column="threadid" property="threadid" jdbcType="VARCHAR" />
           <result column="nodetype" property="nodetype" jdbcType="VARCHAR" />
           <result column="nodetitle" property="nodetitle" jdbcType="VARCHAR" />
           <result column="nodetext" property="nodetext" jdbcType="VARCHAR" />
           <result column="nodeparentid" property="nodeparentid" jdbcType="VARCHAR" />
           <result column="nodepath" property="nodepath" jdbcType="VARCHAR" />
           <result column="userid" property="userid" jdbcType="VARCHAR" />
           <result column="creationdate" property="creationdate" jdbcType="TIMESTAMP" />
           <result column="recstatus" property="recstatus" jdbcType="VARCHAR" />
           <result column="rectimestamp" property="rectimestamp" jdbcType="TIMESTAMP" />
    </resultMap>

  <sql id="Filter_Where_Clause" >
    <where >
      <foreach collection="filter.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
                <when test="criterion.subSelectCriterion" >
                  and ${criterion.prefixCondition} #{criterion.value} ${criterion.suffixCondition}
                </when>                                
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <!--
  <sql id="Filter_Where_Clause_4_Update" >
    <where >
      <foreach collection="filter.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  -->  
  <sql id="Base_Column_List" >
    threadnodeid,  site,  threadid,  nodetype,  nodetitle,  nodetext,  nodeparentid,  nodepath,  userid,
  creationdate,  recstatus,  rectimestamp  </sql>
  
  <sql id='GroupBy_Column_List'>
    <trim suffixOverrides=",">
        <choose >
       <when test="filter != null &amp;&amp; filter.isGroupBy('threadnodeid')" >
           threadnodeid,
       </when>
       <otherwise>
           null as threadnodeid,
       </otherwise>         
     </choose> 
	      <choose >
       <when test="filter != null &amp;&amp; filter.isGroupBy('site')" >
           site,
       </when>
       <otherwise>
           null as site,
       </otherwise>         
     </choose> 
	      <choose >
       <when test="filter != null &amp;&amp; filter.isGroupBy('threadid')" >
           threadid,
       </when>
       <otherwise>
           null as threadid,
       </otherwise>         
     </choose> 
	      <choose >
       <when test="filter != null &amp;&amp; filter.isGroupBy('nodetype')" >
           nodetype,
       </when>
       <otherwise>
           null as nodetype,
       </otherwise>         
     </choose> 
	      <choose >
       <when test="filter != null &amp;&amp; filter.isGroupBy('nodetitle')" >
           nodetitle,
       </when>
       <otherwise>
           null as nodetitle,
       </otherwise>         
     </choose> 
	      <choose >
       <when test="filter != null &amp;&amp; filter.isGroupBy('nodetext')" >
           nodetext,
       </when>
       <otherwise>
           null as nodetext,
       </otherwise>         
     </choose> 
	      <choose >
       <when test="filter != null &amp;&amp; filter.isGroupBy('nodeparentid')" >
           nodeparentid,
       </when>
       <otherwise>
           null as nodeparentid,
       </otherwise>         
     </choose> 
	      <choose >
       <when test="filter != null &amp;&amp; filter.isGroupBy('nodepath')" >
           nodepath,
       </when>
       <otherwise>
           null as nodepath,
       </otherwise>         
     </choose> 
	      <choose >
       <when test="filter != null &amp;&amp; filter.isGroupBy('userid')" >
           userid,
       </when>
       <otherwise>
           null as userid,
       </otherwise>         
     </choose> 
	      <choose >
       <when test="filter != null &amp;&amp; filter.isGroupBy('creationdate')" >
           creationdate,
       </when>
       <otherwise>
           null as creationdate,
       </otherwise>         
     </choose> 
	      <choose >
       <when test="filter != null &amp;&amp; filter.isGroupBy('recstatus')" >
           recstatus,
       </when>
       <otherwise>
           null as recstatus,
       </otherwise>         
     </choose> 
	      <choose >
       <when test="filter != null &amp;&amp; filter.isGroupBy('rectimestamp')" >
           rectimestamp,
       </when>
       <otherwise>
           null as rectimestamp,
       </otherwise>         
     </choose> 
	      </trim>       
  </sql>
  
  <select id="selectByThreadnodeid" resultMap="BaseResultMap" parameterType="map" >
    select 
    <include refid="Base_Column_List" />
    from r3_bbsthreadnode
    where threadnodeid = #{threadnodeid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByThreadnodeid" parameterType="map" >
    delete
    from r3_bbsthreadnode
    where threadnodeid = #{threadnodeid,jdbcType=VARCHAR}
  </delete>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="map" >
    select 
    <include refid="Base_Column_List" />
    from r3_bbsthreadnode    
    where  threadnodeid = #{pk.threadnodeid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="map">
    delete
    from r3_bbsthreadnode
    where  threadnodeid = #{pk.threadnodeid,jdbcType=VARCHAR}
  </delete>  
  <select id="select" resultMap="BaseResultMap" parameterType="map" >
    select
    <if test="filter != null &amp;&amp; filter.distinct" >
      distinct
    </if>
    
    <choose >
       <when test="filter != null &amp;&amp; filter.groupByClause != null" >
           <include refid="GroupBy_Column_List" />
       </when>
       <otherwise>
           <include refid="Base_Column_List" />
       </otherwise>
    </choose>
        
    from r3_bbsthreadnode
    <if test="filter != null" >
      <include refid="Filter_Where_Clause" />
    </if>
    <if test="filter != null &amp;&amp; filter.groupByClause != null" >
      group by ${filter.groupByClause}
    </if>
    <if test="filter != null &amp;&amp; filter.orderByClause != null" >
      order by ${filter.orderByClause}
    </if>
    <if test="filter != null &amp;&amp; filter.limitFetch > 0" >
      limit ${filter.limitFetch}
    </if>
  </select>
  <select id="count" parameterType="map" resultType="java.lang.Integer" >
    select count(*) from r3_bbsthreadnode
    <if test="filter != null" >
      <include refid="Filter_Where_Clause" />
    </if>
  </select>  
  <delete id="delete" parameterType="map" >
    delete from r3_bbsthreadnode
    <!-- _parameter: dato che e' una map lo sostituisco con il nome del parametro in quanto non Ã¨ l'unico -->
    <if test="filter != null" >
      <include refid="Filter_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="map" >
    insert into r3_bbsthreadnode (
 threadnodeid, site, threadid, nodetype, nodetitle, nodetext, nodeparentid, nodepath, userid,
 creationdate, recstatus, rectimestamp      )
    values (
 
 #{record.threadnodeid,jdbcType=VARCHAR}, 
 #{record.site,jdbcType=VARCHAR}, 
 #{record.threadid,jdbcType=VARCHAR}, 
 #{record.nodetype,jdbcType=VARCHAR},
 
 #{record.nodetitle,jdbcType=VARCHAR}, 
 #{record.nodetext,jdbcType=VARCHAR}, 
 #{record.nodeparentid,jdbcType=VARCHAR}, 
 #{record.nodepath,jdbcType=VARCHAR},
 
 #{record.userid,jdbcType=VARCHAR}, 
 #{record.creationdate,jdbcType=TIMESTAMP}, 
 #{record.recstatus,jdbcType=VARCHAR}, 
 #{record.rectimestamp,jdbcType=TIMESTAMP}
      )
  </insert>
  <update id="update" parameterType="map" >
    update r3_bbsthreadnode
    <set >
      <if test="record.siteDirty" >
        site = #{record.site,jdbcType=VARCHAR},
      </if>      
      <if test="record.threadidDirty" >
        threadid = #{record.threadid,jdbcType=VARCHAR},
      </if>      
      <if test="record.nodetypeDirty" >
        nodetype = #{record.nodetype,jdbcType=VARCHAR},
      </if>      
      <if test="record.nodetitleDirty" >
        nodetitle = #{record.nodetitle,jdbcType=VARCHAR},
      </if>      
      <if test="record.nodetextDirty" >
        nodetext = #{record.nodetext,jdbcType=VARCHAR},
      </if>      
      <if test="record.nodeparentidDirty" >
        nodeparentid = #{record.nodeparentid,jdbcType=VARCHAR},
      </if>      
      <if test="record.nodepathDirty" >
        nodepath = #{record.nodepath,jdbcType=VARCHAR},
      </if>      
      <if test="record.useridDirty" >
        userid = #{record.userid,jdbcType=VARCHAR},
      </if>      
      <if test="record.creationdateDirty" >
        creationdate = #{record.creationdate,jdbcType=TIMESTAMP},
      </if>      
      <if test="record.recstatusDirty" >
        recstatus = #{record.recstatus,jdbcType=VARCHAR},
      </if>      
      <if test="record.rectimestampDirty" >
        rectimestamp = #{record.rectimestamp,jdbcType=TIMESTAMP},
      </if>      
    </set>
    <if test="filter != null" >
      <include refid="Filter_Where_Clause" />
      <!-- Non dovrebbe servire in quanto il filter e' sempre named. -->
      <!-- <include refid="Filter_Where_Clause_4_Update" /> -->
    </if>
  </update>
  <update id="updateByPrimaryKey" parameterType="map" >
    update r3_bbsthreadnode
    <set >
      <if test="record.siteDirty" >
        site = #{record.site,jdbcType=VARCHAR},
      </if>
      <if test="record.threadidDirty" >
        threadid = #{record.threadid,jdbcType=VARCHAR},
      </if>
      <if test="record.nodetypeDirty" >
        nodetype = #{record.nodetype,jdbcType=VARCHAR},
      </if>
      <if test="record.nodetitleDirty" >
        nodetitle = #{record.nodetitle,jdbcType=VARCHAR},
      </if>
      <if test="record.nodetextDirty" >
        nodetext = #{record.nodetext,jdbcType=VARCHAR},
      </if>
      <if test="record.nodeparentidDirty" >
        nodeparentid = #{record.nodeparentid,jdbcType=VARCHAR},
      </if>
      <if test="record.nodepathDirty" >
        nodepath = #{record.nodepath,jdbcType=VARCHAR},
      </if>
      <if test="record.useridDirty" >
        userid = #{record.userid,jdbcType=VARCHAR},
      </if>
      <if test="record.creationdateDirty" >
        creationdate = #{record.creationdate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.recstatusDirty" >
        recstatus = #{record.recstatus,jdbcType=VARCHAR},
      </if>
      <if test="record.rectimestampDirty" >
        rectimestamp = #{record.rectimestamp,jdbcType=TIMESTAMP},
      </if>
    </set>
    where  threadnodeid = #{record.threadnodeid,jdbcType=VARCHAR}
  </update>

</mapper>
