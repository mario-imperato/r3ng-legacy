<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<!--
  TODO: xmlCopyRight.txt
   
  -->
<!--
  TODO: xmlReadme.txt
   
  -->

<!-- <mapper resource="org/r3/db/sailevent/fivmember/FIVMemberMapper.xml"/> -->
<mapper namespace="org.r3.db.sailevent.fivmember.FIVMemberMapper" >
    <resultMap id="BaseResultMap" type="org.r3.db.sailevent.fivmember.FIVMemberDTO" >
         <id column="cardnumber" property="cardnumber" jdbcType="VARCHAR" />
           <result column="cardnumberstatuscode" property="cardnumberstatuscode" jdbcType="VARCHAR" />
           <result column="cardholdername" property="cardholdername" jdbcType="VARCHAR" />
           <result column="cardholderlastname" property="cardholderlastname" jdbcType="VARCHAR" />
           <result column="medexamexpirationdate" property="medexamexpirationdate" jdbcType="TIMESTAMP" />
           <result column="medexamtypecode" property="medexamtypecode" jdbcType="VARCHAR" />
           <result column="cardexpirationdate" property="cardexpirationdate" jdbcType="TIMESTAMP" />
           <result column="birthdate" property="birthdate" jdbcType="VARCHAR" />
           <result column="sex" property="sex" jdbcType="VARCHAR" />
           <result column="birthplace" property="birthplace" jdbcType="VARCHAR" />
           <result column="birthdistrict" property="birthdistrict" jdbcType="VARCHAR" />
           <result column="ssn" property="ssn" jdbcType="VARCHAR" />
           <result column="address" property="address" jdbcType="VARCHAR" />
           <result column="streetnumber" property="streetnumber" jdbcType="VARCHAR" />
           <result column="city" property="city" jdbcType="VARCHAR" />
           <result column="zipcode" property="zipcode" jdbcType="VARCHAR" />
           <result column="district" property="district" jdbcType="VARCHAR" />
           <result column="phone" property="phone" jdbcType="VARCHAR" />
           <result column="cellular" property="cellular" jdbcType="VARCHAR" />
           <result column="fax" property="fax" jdbcType="VARCHAR" />
           <result column="email" property="email" jdbcType="VARCHAR" />
           <result column="renewaldate" property="renewaldate" jdbcType="TIMESTAMP" />
           <result column="yachtclub" property="yachtclub" jdbcType="VARCHAR" />
           <result column="membertypecode" property="membertypecode" jdbcType="VARCHAR" />
           <result column="activitytypecode" property="activitytypecode" jdbcType="VARCHAR" />
           <result column="systemcheckdate" property="systemcheckdate" jdbcType="TIMESTAMP" />
           <result column="verificationrequired" property="verificationrequired" jdbcType="VARCHAR" />
           <result column="createtimestamp" property="createtimestamp" jdbcType="TIMESTAMP" />
           <result column="rectimestamp" property="rectimestamp" jdbcType="TIMESTAMP" />
    </resultMap>

  <sql id="Filter_Where_Clause" >
    <where >
      <foreach collection="filter.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
                <when test="criterion.subSelectCriterion" >
                  and ${criterion.prefixCondition} #{criterion.value} ${criterion.suffixCondition}
                </when>                                
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <!--
  <sql id="Filter_Where_Clause_4_Update" >
    <where >
      <foreach collection="filter.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  -->  
  <sql id="Base_Column_List" >
    cardnumber,  cardnumberstatuscode,  cardholdername,  cardholderlastname,  medexamexpirationdate,  medexamtypecode,  cardexpirationdate,  birthdate,  sex,
  birthplace,  birthdistrict,  ssn,  address,  streetnumber,  city,  zipcode,  district,  phone,
  cellular,  fax,  email,  renewaldate,  yachtclub,  membertypecode,  activitytypecode,  systemcheckdate,  verificationrequired,
  createtimestamp,  rectimestamp  </sql>
  <select id="selectByCardnumber" resultMap="BaseResultMap" parameterType="map" >
    select 
    <include refid="Base_Column_List" />
    from sev_fivmember
    where cardnumber = #{cardnumber,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByCardnumber" parameterType="map" >
    delete
    from sev_fivmember
    where cardnumber = #{cardnumber,jdbcType=VARCHAR}
  </delete>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="map" >
    select 
    <include refid="Base_Column_List" />
    from sev_fivmember    
    where  cardnumber = #{pk.cardnumber,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="map">
    delete
    from sev_fivmember
    where  cardnumber = #{pk.cardnumber,jdbcType=VARCHAR}
  </delete>  
  <select id="select" resultMap="BaseResultMap" parameterType="map" >
    select
    <if test="filter != null &amp;&amp; filter.distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sev_fivmember
    <if test="filter != null" >
      <include refid="Filter_Where_Clause" />
    </if>
    <if test="filter != null &amp;&amp; filter.orderByClause != null" >
      order by ${filter.orderByClause}
    </if>
    <if test="filter != null &amp;&amp; filter.limitFetch > 0" >
      limit ${filter.limitFetch}
    </if>
  </select>
  <select id="count" parameterType="map" resultType="java.lang.Integer" >
    select count(*) from sev_fivmember
    <if test="filter != null" >
      <include refid="Filter_Where_Clause" />
    </if>
  </select>  
  <delete id="delete" parameterType="map" >
    delete from sev_fivmember
    <!-- _parameter: dato che e' una map lo sostituisco con il nome del parametro in quanto non Ã¨ l'unico -->
    <if test="filter != null" >
      <include refid="Filter_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="map" >
    insert into sev_fivmember (
 cardnumber, cardnumberstatuscode, cardholdername, cardholderlastname, medexamexpirationdate, medexamtypecode, cardexpirationdate, birthdate, sex,
 birthplace, birthdistrict, ssn, address, streetnumber, city, zipcode, district, phone,
 cellular, fax, email, renewaldate, yachtclub, membertypecode, activitytypecode, systemcheckdate, verificationrequired,
 createtimestamp, rectimestamp      )
    values (
 
 #{record.cardnumber,jdbcType=VARCHAR}, 
 #{record.cardnumberstatuscode,jdbcType=VARCHAR}, 
 #{record.cardholdername,jdbcType=VARCHAR}, 
 #{record.cardholderlastname,jdbcType=VARCHAR},
 
 #{record.medexamexpirationdate,jdbcType=TIMESTAMP}, 
 #{record.medexamtypecode,jdbcType=VARCHAR}, 
 #{record.cardexpirationdate,jdbcType=TIMESTAMP}, 
 #{record.birthdate,jdbcType=VARCHAR},
 
 #{record.sex,jdbcType=VARCHAR}, 
 #{record.birthplace,jdbcType=VARCHAR}, 
 #{record.birthdistrict,jdbcType=VARCHAR}, 
 #{record.ssn,jdbcType=VARCHAR},
 
 #{record.address,jdbcType=VARCHAR}, 
 #{record.streetnumber,jdbcType=VARCHAR}, 
 #{record.city,jdbcType=VARCHAR}, 
 #{record.zipcode,jdbcType=VARCHAR},
 
 #{record.district,jdbcType=VARCHAR}, 
 #{record.phone,jdbcType=VARCHAR}, 
 #{record.cellular,jdbcType=VARCHAR}, 
 #{record.fax,jdbcType=VARCHAR},
 
 #{record.email,jdbcType=VARCHAR}, 
 #{record.renewaldate,jdbcType=TIMESTAMP}, 
 #{record.yachtclub,jdbcType=VARCHAR}, 
 #{record.membertypecode,jdbcType=VARCHAR},
 
 #{record.activitytypecode,jdbcType=VARCHAR}, 
 #{record.systemcheckdate,jdbcType=TIMESTAMP}, 
 #{record.verificationrequired,jdbcType=VARCHAR}, 
 #{record.createtimestamp,jdbcType=TIMESTAMP},
 
 #{record.rectimestamp,jdbcType=TIMESTAMP}
      )
  </insert>
  <update id="update" parameterType="map" >
    update sev_fivmember
    <set >
      <if test="record.cardnumberstatuscodeDirty" >
        cardnumberstatuscode = #{record.cardnumberstatuscode,jdbcType=VARCHAR},
      </if>      
      <if test="record.cardholdernameDirty" >
        cardholdername = #{record.cardholdername,jdbcType=VARCHAR},
      </if>      
      <if test="record.cardholderlastnameDirty" >
        cardholderlastname = #{record.cardholderlastname,jdbcType=VARCHAR},
      </if>      
      <if test="record.medexamexpirationdateDirty" >
        medexamexpirationdate = #{record.medexamexpirationdate,jdbcType=TIMESTAMP},
      </if>      
      <if test="record.medexamtypecodeDirty" >
        medexamtypecode = #{record.medexamtypecode,jdbcType=VARCHAR},
      </if>      
      <if test="record.cardexpirationdateDirty" >
        cardexpirationdate = #{record.cardexpirationdate,jdbcType=TIMESTAMP},
      </if>      
      <if test="record.birthdateDirty" >
        birthdate = #{record.birthdate,jdbcType=VARCHAR},
      </if>      
      <if test="record.sexDirty" >
        sex = #{record.sex,jdbcType=VARCHAR},
      </if>      
      <if test="record.birthplaceDirty" >
        birthplace = #{record.birthplace,jdbcType=VARCHAR},
      </if>      
      <if test="record.birthdistrictDirty" >
        birthdistrict = #{record.birthdistrict,jdbcType=VARCHAR},
      </if>      
      <if test="record.ssnDirty" >
        ssn = #{record.ssn,jdbcType=VARCHAR},
      </if>      
      <if test="record.addressDirty" >
        address = #{record.address,jdbcType=VARCHAR},
      </if>      
      <if test="record.streetnumberDirty" >
        streetnumber = #{record.streetnumber,jdbcType=VARCHAR},
      </if>      
      <if test="record.cityDirty" >
        city = #{record.city,jdbcType=VARCHAR},
      </if>      
      <if test="record.zipcodeDirty" >
        zipcode = #{record.zipcode,jdbcType=VARCHAR},
      </if>      
      <if test="record.districtDirty" >
        district = #{record.district,jdbcType=VARCHAR},
      </if>      
      <if test="record.phoneDirty" >
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>      
      <if test="record.cellularDirty" >
        cellular = #{record.cellular,jdbcType=VARCHAR},
      </if>      
      <if test="record.faxDirty" >
        fax = #{record.fax,jdbcType=VARCHAR},
      </if>      
      <if test="record.emailDirty" >
        email = #{record.email,jdbcType=VARCHAR},
      </if>      
      <if test="record.renewaldateDirty" >
        renewaldate = #{record.renewaldate,jdbcType=TIMESTAMP},
      </if>      
      <if test="record.yachtclubDirty" >
        yachtclub = #{record.yachtclub,jdbcType=VARCHAR},
      </if>      
      <if test="record.membertypecodeDirty" >
        membertypecode = #{record.membertypecode,jdbcType=VARCHAR},
      </if>      
      <if test="record.activitytypecodeDirty" >
        activitytypecode = #{record.activitytypecode,jdbcType=VARCHAR},
      </if>      
      <if test="record.systemcheckdateDirty" >
        systemcheckdate = #{record.systemcheckdate,jdbcType=TIMESTAMP},
      </if>      
      <if test="record.verificationrequiredDirty" >
        verificationrequired = #{record.verificationrequired,jdbcType=VARCHAR},
      </if>      
      <if test="record.createtimestampDirty" >
        createtimestamp = #{record.createtimestamp,jdbcType=TIMESTAMP},
      </if>      
      <if test="record.rectimestampDirty" >
        rectimestamp = #{record.rectimestamp,jdbcType=TIMESTAMP},
      </if>      
    </set>
    <if test="filter != null" >
      <include refid="Filter_Where_Clause" />
      <!-- Non dovrebbe servire in quanto il filter e' sempre named. -->
      <!-- <include refid="Filter_Where_Clause_4_Update" /> -->
    </if>
  </update>
  <update id="updateByPrimaryKey" parameterType="map" >
    update sev_fivmember
    <set >
      <if test="record.cardnumberstatuscodeDirty" >
        cardnumberstatuscode = #{record.cardnumberstatuscode,jdbcType=VARCHAR},
      </if>
      <if test="record.cardholdernameDirty" >
        cardholdername = #{record.cardholdername,jdbcType=VARCHAR},
      </if>
      <if test="record.cardholderlastnameDirty" >
        cardholderlastname = #{record.cardholderlastname,jdbcType=VARCHAR},
      </if>
      <if test="record.medexamexpirationdateDirty" >
        medexamexpirationdate = #{record.medexamexpirationdate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.medexamtypecodeDirty" >
        medexamtypecode = #{record.medexamtypecode,jdbcType=VARCHAR},
      </if>
      <if test="record.cardexpirationdateDirty" >
        cardexpirationdate = #{record.cardexpirationdate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.birthdateDirty" >
        birthdate = #{record.birthdate,jdbcType=VARCHAR},
      </if>
      <if test="record.sexDirty" >
        sex = #{record.sex,jdbcType=VARCHAR},
      </if>
      <if test="record.birthplaceDirty" >
        birthplace = #{record.birthplace,jdbcType=VARCHAR},
      </if>
      <if test="record.birthdistrictDirty" >
        birthdistrict = #{record.birthdistrict,jdbcType=VARCHAR},
      </if>
      <if test="record.ssnDirty" >
        ssn = #{record.ssn,jdbcType=VARCHAR},
      </if>
      <if test="record.addressDirty" >
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.streetnumberDirty" >
        streetnumber = #{record.streetnumber,jdbcType=VARCHAR},
      </if>
      <if test="record.cityDirty" >
        city = #{record.city,jdbcType=VARCHAR},
      </if>
      <if test="record.zipcodeDirty" >
        zipcode = #{record.zipcode,jdbcType=VARCHAR},
      </if>
      <if test="record.districtDirty" >
        district = #{record.district,jdbcType=VARCHAR},
      </if>
      <if test="record.phoneDirty" >
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.cellularDirty" >
        cellular = #{record.cellular,jdbcType=VARCHAR},
      </if>
      <if test="record.faxDirty" >
        fax = #{record.fax,jdbcType=VARCHAR},
      </if>
      <if test="record.emailDirty" >
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.renewaldateDirty" >
        renewaldate = #{record.renewaldate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.yachtclubDirty" >
        yachtclub = #{record.yachtclub,jdbcType=VARCHAR},
      </if>
      <if test="record.membertypecodeDirty" >
        membertypecode = #{record.membertypecode,jdbcType=VARCHAR},
      </if>
      <if test="record.activitytypecodeDirty" >
        activitytypecode = #{record.activitytypecode,jdbcType=VARCHAR},
      </if>
      <if test="record.systemcheckdateDirty" >
        systemcheckdate = #{record.systemcheckdate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.verificationrequiredDirty" >
        verificationrequired = #{record.verificationrequired,jdbcType=VARCHAR},
      </if>
      <if test="record.createtimestampDirty" >
        createtimestamp = #{record.createtimestamp,jdbcType=TIMESTAMP},
      </if>
      <if test="record.rectimestampDirty" >
        rectimestamp = #{record.rectimestamp,jdbcType=TIMESTAMP},
      </if>
    </set>
    where  cardnumber = #{record.cardnumber,jdbcType=VARCHAR}
  </update>

</mapper>
