//
// generated by jGAMe Software - GPA Gruppo Progetti Avanzati s.r.l. 2016-2017
//
//
// README Section
//


package org.r3.db.sailevent.appdocument;

import java.util.List;
import java.util.ArrayList;

public class SailApplicationDocumentFilter{
    protected String orderByClause;
    protected String  groupByClause;
    protected boolean distinct;
    protected int     limitFetch;
    
    protected List<org.r3.db.utils.Criteria> oredCriteria;

    public SailApplicationDocumentFilter() 
    {
        oredCriteria = new ArrayList<org.r3.db.utils.Criteria>();
        limitFetch = 0;
        groupByClause = null;
    }
    
    public String getGroupByClause()
	  {
	  	return groupByClause;
	  }
    
	  public void setGroupByClause(String groupByClause)
	  {
	  	this.groupByClause = groupByClause;
	  }
	
	  public boolean isGroupBy(String aColumnName)
	  {
	  	return groupByClause != null && groupByClause.indexOf(aColumnName) >= 0;
	  }
	
    public void setOrderByClause(String orderByClause) 
    {
        this.orderByClause = orderByClause;
    }
    
    public String getOrderByClause() 
    {
        return orderByClause;
    }

    public int getLimitFetch()
  	{
		   return limitFetch;
	  }

	  public void setLimitFetch(int limitFetch)
	  {
		  this.limitFetch = limitFetch;
	  }

    public void setDistinct(boolean distinct) 
    {
        this.distinct = distinct;
    }

    public boolean isDistinct() 
    {
        return distinct;
    }

    public List<org.r3.db.utils.Criteria> getOredCriteria() 
    {
        return oredCriteria;
    }

    public void or(org.r3.db.utils.Criteria criteria) 
    {
        oredCriteria.add(criteria);
    }

    public SailApplicationDocumentCriteria or() 
    {
        SailApplicationDocumentCriteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    public SailApplicationDocumentCriteria createCriteria() 
    {
        SailApplicationDocumentCriteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    protected SailApplicationDocumentCriteria createCriteriaInternal() 
    {
        SailApplicationDocumentCriteria criteria = new SailApplicationDocumentCriteria();
        return criteria;
    }

    public void clear() 
    {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    public static abstract class SailApplicationDocumentCriteriaBase extends org.r3.db.utils.Criteria
    {
        
        public SailApplicationDocumentCriteria andDocumentidIsNull() {
            addCriterion("documentid is null");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andDocumentidIsNotNull() {
            addCriterion("documentid is not null");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andDocumentidEqualTo(java.lang.String value) {
            if (value != null)
              addCriterion("documentid =", value, "documentid");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andDocumentidNotEqualTo(java.lang.String value) {
            if (value != null)
              addCriterion("documentid <>", value, "documentid");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andDocumentidGreaterThan(java.lang.String value) {
            if (value != null)
              addCriterion("documentid >", value, "documentid");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andDocumentidGreaterThanOrEqualTo(java.lang.String value) {
            if (value != null)
              addCriterion("documentid >=", value, "documentid");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andDocumentidLessThan(java.lang.String value) {
            if (value != null)
              addCriterion("documentid <", value, "documentid");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andDocumentidLessThanOrEqualTo(java.lang.String value) {
            if (value != null)
              addCriterion("documentid <=", value, "documentid");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andDocumentidLike(java.lang.String value) {
            if (value != null)
              addCriterion("documentid like ", value, "documentid");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andDocumentidNotLike(java.lang.String value) {
            if (value != null)
              addCriterion("documentid not like ", value, "documentid");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andDocumentidIn(java.util.List<java.lang.String> value) {
            if (value != null && value.size() > 0)
              addCriterion("documentid in ", value, "documentid");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andDocumentidNotIn(java.util.List<java.lang.String> value) {
            if (value != null && value.size() > 0)
               addCriterion("documentid not in ", value, "documentid");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andDocumentidBetween(java.lang.String value1, java.lang.String value2) {
            if (value1 != null && value2 != null)
              addCriterion("documentid between ", value1, value2, "documentid");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andDocumentidNotBetween(java.lang.String value1, java.lang.String value2) {
            if (value1 != null && value2 != null)
              addCriterion("documentid not between ", value1, value2, "documentid");
            return (SailApplicationDocumentCriteria) this;
        }
        
        public SailApplicationDocumentCriteria andEventidIsNull() {
            addCriterion("eventid is null");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andEventidIsNotNull() {
            addCriterion("eventid is not null");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andEventidEqualTo(java.lang.String value) {
            if (value != null)
              addCriterion("eventid =", value, "eventid");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andEventidNotEqualTo(java.lang.String value) {
            if (value != null)
              addCriterion("eventid <>", value, "eventid");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andEventidGreaterThan(java.lang.String value) {
            if (value != null)
              addCriterion("eventid >", value, "eventid");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andEventidGreaterThanOrEqualTo(java.lang.String value) {
            if (value != null)
              addCriterion("eventid >=", value, "eventid");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andEventidLessThan(java.lang.String value) {
            if (value != null)
              addCriterion("eventid <", value, "eventid");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andEventidLessThanOrEqualTo(java.lang.String value) {
            if (value != null)
              addCriterion("eventid <=", value, "eventid");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andEventidLike(java.lang.String value) {
            if (value != null)
              addCriterion("eventid like ", value, "eventid");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andEventidNotLike(java.lang.String value) {
            if (value != null)
              addCriterion("eventid not like ", value, "eventid");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andEventidIn(java.util.List<java.lang.String> value) {
            if (value != null && value.size() > 0)
              addCriterion("eventid in ", value, "eventid");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andEventidNotIn(java.util.List<java.lang.String> value) {
            if (value != null && value.size() > 0)
               addCriterion("eventid not in ", value, "eventid");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andEventidBetween(java.lang.String value1, java.lang.String value2) {
            if (value1 != null && value2 != null)
              addCriterion("eventid between ", value1, value2, "eventid");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andEventidNotBetween(java.lang.String value1, java.lang.String value2) {
            if (value1 != null && value2 != null)
              addCriterion("eventid not between ", value1, value2, "eventid");
            return (SailApplicationDocumentCriteria) this;
        }
        
        public SailApplicationDocumentCriteria andApplicationidIsNull() {
            addCriterion("applicationid is null");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andApplicationidIsNotNull() {
            addCriterion("applicationid is not null");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andApplicationidEqualTo(java.lang.String value) {
            if (value != null)
              addCriterion("applicationid =", value, "applicationid");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andApplicationidNotEqualTo(java.lang.String value) {
            if (value != null)
              addCriterion("applicationid <>", value, "applicationid");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andApplicationidGreaterThan(java.lang.String value) {
            if (value != null)
              addCriterion("applicationid >", value, "applicationid");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andApplicationidGreaterThanOrEqualTo(java.lang.String value) {
            if (value != null)
              addCriterion("applicationid >=", value, "applicationid");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andApplicationidLessThan(java.lang.String value) {
            if (value != null)
              addCriterion("applicationid <", value, "applicationid");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andApplicationidLessThanOrEqualTo(java.lang.String value) {
            if (value != null)
              addCriterion("applicationid <=", value, "applicationid");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andApplicationidLike(java.lang.String value) {
            if (value != null)
              addCriterion("applicationid like ", value, "applicationid");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andApplicationidNotLike(java.lang.String value) {
            if (value != null)
              addCriterion("applicationid not like ", value, "applicationid");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andApplicationidIn(java.util.List<java.lang.String> value) {
            if (value != null && value.size() > 0)
              addCriterion("applicationid in ", value, "applicationid");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andApplicationidNotIn(java.util.List<java.lang.String> value) {
            if (value != null && value.size() > 0)
               addCriterion("applicationid not in ", value, "applicationid");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andApplicationidBetween(java.lang.String value1, java.lang.String value2) {
            if (value1 != null && value2 != null)
              addCriterion("applicationid between ", value1, value2, "applicationid");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andApplicationidNotBetween(java.lang.String value1, java.lang.String value2) {
            if (value1 != null && value2 != null)
              addCriterion("applicationid not between ", value1, value2, "applicationid");
            return (SailApplicationDocumentCriteria) this;
        }
        
        public SailApplicationDocumentCriteria andDocumenttypecodeIsNull() {
            addCriterion("documenttypecode is null");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andDocumenttypecodeIsNotNull() {
            addCriterion("documenttypecode is not null");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andDocumenttypecodeEqualTo(java.lang.String value) {
            if (value != null)
              addCriterion("documenttypecode =", value, "documenttypecode");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andDocumenttypecodeNotEqualTo(java.lang.String value) {
            if (value != null)
              addCriterion("documenttypecode <>", value, "documenttypecode");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andDocumenttypecodeGreaterThan(java.lang.String value) {
            if (value != null)
              addCriterion("documenttypecode >", value, "documenttypecode");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andDocumenttypecodeGreaterThanOrEqualTo(java.lang.String value) {
            if (value != null)
              addCriterion("documenttypecode >=", value, "documenttypecode");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andDocumenttypecodeLessThan(java.lang.String value) {
            if (value != null)
              addCriterion("documenttypecode <", value, "documenttypecode");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andDocumenttypecodeLessThanOrEqualTo(java.lang.String value) {
            if (value != null)
              addCriterion("documenttypecode <=", value, "documenttypecode");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andDocumenttypecodeLike(java.lang.String value) {
            if (value != null)
              addCriterion("documenttypecode like ", value, "documenttypecode");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andDocumenttypecodeNotLike(java.lang.String value) {
            if (value != null)
              addCriterion("documenttypecode not like ", value, "documenttypecode");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andDocumenttypecodeIn(java.util.List<java.lang.String> value) {
            if (value != null && value.size() > 0)
              addCriterion("documenttypecode in ", value, "documenttypecode");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andDocumenttypecodeNotIn(java.util.List<java.lang.String> value) {
            if (value != null && value.size() > 0)
               addCriterion("documenttypecode not in ", value, "documenttypecode");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andDocumenttypecodeBetween(java.lang.String value1, java.lang.String value2) {
            if (value1 != null && value2 != null)
              addCriterion("documenttypecode between ", value1, value2, "documenttypecode");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andDocumenttypecodeNotBetween(java.lang.String value1, java.lang.String value2) {
            if (value1 != null && value2 != null)
              addCriterion("documenttypecode not between ", value1, value2, "documenttypecode");
            return (SailApplicationDocumentCriteria) this;
        }
        
        public SailApplicationDocumentCriteria andDocumentnameIsNull() {
            addCriterion("documentname is null");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andDocumentnameIsNotNull() {
            addCriterion("documentname is not null");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andDocumentnameEqualTo(java.lang.String value) {
            if (value != null)
              addCriterion("documentname =", value, "documentname");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andDocumentnameNotEqualTo(java.lang.String value) {
            if (value != null)
              addCriterion("documentname <>", value, "documentname");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andDocumentnameGreaterThan(java.lang.String value) {
            if (value != null)
              addCriterion("documentname >", value, "documentname");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andDocumentnameGreaterThanOrEqualTo(java.lang.String value) {
            if (value != null)
              addCriterion("documentname >=", value, "documentname");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andDocumentnameLessThan(java.lang.String value) {
            if (value != null)
              addCriterion("documentname <", value, "documentname");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andDocumentnameLessThanOrEqualTo(java.lang.String value) {
            if (value != null)
              addCriterion("documentname <=", value, "documentname");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andDocumentnameLike(java.lang.String value) {
            if (value != null)
              addCriterion("documentname like ", value, "documentname");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andDocumentnameNotLike(java.lang.String value) {
            if (value != null)
              addCriterion("documentname not like ", value, "documentname");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andDocumentnameIn(java.util.List<java.lang.String> value) {
            if (value != null && value.size() > 0)
              addCriterion("documentname in ", value, "documentname");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andDocumentnameNotIn(java.util.List<java.lang.String> value) {
            if (value != null && value.size() > 0)
               addCriterion("documentname not in ", value, "documentname");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andDocumentnameBetween(java.lang.String value1, java.lang.String value2) {
            if (value1 != null && value2 != null)
              addCriterion("documentname between ", value1, value2, "documentname");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andDocumentnameNotBetween(java.lang.String value1, java.lang.String value2) {
            if (value1 != null && value2 != null)
              addCriterion("documentname not between ", value1, value2, "documentname");
            return (SailApplicationDocumentCriteria) this;
        }
        
        public SailApplicationDocumentCriteria andDocumenturlIsNull() {
            addCriterion("documenturl is null");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andDocumenturlIsNotNull() {
            addCriterion("documenturl is not null");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andDocumenturlEqualTo(java.lang.String value) {
            if (value != null)
              addCriterion("documenturl =", value, "documenturl");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andDocumenturlNotEqualTo(java.lang.String value) {
            if (value != null)
              addCriterion("documenturl <>", value, "documenturl");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andDocumenturlGreaterThan(java.lang.String value) {
            if (value != null)
              addCriterion("documenturl >", value, "documenturl");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andDocumenturlGreaterThanOrEqualTo(java.lang.String value) {
            if (value != null)
              addCriterion("documenturl >=", value, "documenturl");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andDocumenturlLessThan(java.lang.String value) {
            if (value != null)
              addCriterion("documenturl <", value, "documenturl");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andDocumenturlLessThanOrEqualTo(java.lang.String value) {
            if (value != null)
              addCriterion("documenturl <=", value, "documenturl");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andDocumenturlLike(java.lang.String value) {
            if (value != null)
              addCriterion("documenturl like ", value, "documenturl");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andDocumenturlNotLike(java.lang.String value) {
            if (value != null)
              addCriterion("documenturl not like ", value, "documenturl");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andDocumenturlIn(java.util.List<java.lang.String> value) {
            if (value != null && value.size() > 0)
              addCriterion("documenturl in ", value, "documenturl");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andDocumenturlNotIn(java.util.List<java.lang.String> value) {
            if (value != null && value.size() > 0)
               addCriterion("documenturl not in ", value, "documenturl");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andDocumenturlBetween(java.lang.String value1, java.lang.String value2) {
            if (value1 != null && value2 != null)
              addCriterion("documenturl between ", value1, value2, "documenturl");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andDocumenturlNotBetween(java.lang.String value1, java.lang.String value2) {
            if (value1 != null && value2 != null)
              addCriterion("documenturl not between ", value1, value2, "documenturl");
            return (SailApplicationDocumentCriteria) this;
        }
        
        public SailApplicationDocumentCriteria andFilesizeIsNull() {
            addCriterion("filesize is null");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andFilesizeIsNotNull() {
            addCriterion("filesize is not null");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andFilesizeEqualTo(java.lang.Long value) {
            if (value != null)
              addCriterion("filesize =", value, "filesize");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andFilesizeNotEqualTo(java.lang.Long value) {
            if (value != null)
              addCriterion("filesize <>", value, "filesize");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andFilesizeGreaterThan(java.lang.Long value) {
            if (value != null)
              addCriterion("filesize >", value, "filesize");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andFilesizeGreaterThanOrEqualTo(java.lang.Long value) {
            if (value != null)
              addCriterion("filesize >=", value, "filesize");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andFilesizeLessThan(java.lang.Long value) {
            if (value != null)
              addCriterion("filesize <", value, "filesize");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andFilesizeLessThanOrEqualTo(java.lang.Long value) {
            if (value != null)
              addCriterion("filesize <=", value, "filesize");
            return (SailApplicationDocumentCriteria) this;
        }

        
        public SailApplicationDocumentCriteria andContenttypeIsNull() {
            addCriterion("contenttype is null");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andContenttypeIsNotNull() {
            addCriterion("contenttype is not null");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andContenttypeEqualTo(java.lang.String value) {
            if (value != null)
              addCriterion("contenttype =", value, "contenttype");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andContenttypeNotEqualTo(java.lang.String value) {
            if (value != null)
              addCriterion("contenttype <>", value, "contenttype");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andContenttypeGreaterThan(java.lang.String value) {
            if (value != null)
              addCriterion("contenttype >", value, "contenttype");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andContenttypeGreaterThanOrEqualTo(java.lang.String value) {
            if (value != null)
              addCriterion("contenttype >=", value, "contenttype");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andContenttypeLessThan(java.lang.String value) {
            if (value != null)
              addCriterion("contenttype <", value, "contenttype");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andContenttypeLessThanOrEqualTo(java.lang.String value) {
            if (value != null)
              addCriterion("contenttype <=", value, "contenttype");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andContenttypeLike(java.lang.String value) {
            if (value != null)
              addCriterion("contenttype like ", value, "contenttype");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andContenttypeNotLike(java.lang.String value) {
            if (value != null)
              addCriterion("contenttype not like ", value, "contenttype");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andContenttypeIn(java.util.List<java.lang.String> value) {
            if (value != null && value.size() > 0)
              addCriterion("contenttype in ", value, "contenttype");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andContenttypeNotIn(java.util.List<java.lang.String> value) {
            if (value != null && value.size() > 0)
               addCriterion("contenttype not in ", value, "contenttype");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andContenttypeBetween(java.lang.String value1, java.lang.String value2) {
            if (value1 != null && value2 != null)
              addCriterion("contenttype between ", value1, value2, "contenttype");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andContenttypeNotBetween(java.lang.String value1, java.lang.String value2) {
            if (value1 != null && value2 != null)
              addCriterion("contenttype not between ", value1, value2, "contenttype");
            return (SailApplicationDocumentCriteria) this;
        }
        
        public SailApplicationDocumentCriteria andAnnotationIsNull() {
            addCriterion("annotation is null");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andAnnotationIsNotNull() {
            addCriterion("annotation is not null");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andAnnotationEqualTo(java.lang.String value) {
            if (value != null)
              addCriterion("annotation =", value, "annotation");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andAnnotationNotEqualTo(java.lang.String value) {
            if (value != null)
              addCriterion("annotation <>", value, "annotation");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andAnnotationGreaterThan(java.lang.String value) {
            if (value != null)
              addCriterion("annotation >", value, "annotation");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andAnnotationGreaterThanOrEqualTo(java.lang.String value) {
            if (value != null)
              addCriterion("annotation >=", value, "annotation");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andAnnotationLessThan(java.lang.String value) {
            if (value != null)
              addCriterion("annotation <", value, "annotation");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andAnnotationLessThanOrEqualTo(java.lang.String value) {
            if (value != null)
              addCriterion("annotation <=", value, "annotation");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andAnnotationLike(java.lang.String value) {
            if (value != null)
              addCriterion("annotation like ", value, "annotation");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andAnnotationNotLike(java.lang.String value) {
            if (value != null)
              addCriterion("annotation not like ", value, "annotation");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andAnnotationIn(java.util.List<java.lang.String> value) {
            if (value != null && value.size() > 0)
              addCriterion("annotation in ", value, "annotation");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andAnnotationNotIn(java.util.List<java.lang.String> value) {
            if (value != null && value.size() > 0)
               addCriterion("annotation not in ", value, "annotation");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andAnnotationBetween(java.lang.String value1, java.lang.String value2) {
            if (value1 != null && value2 != null)
              addCriterion("annotation between ", value1, value2, "annotation");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andAnnotationNotBetween(java.lang.String value1, java.lang.String value2) {
            if (value1 != null && value2 != null)
              addCriterion("annotation not between ", value1, value2, "annotation");
            return (SailApplicationDocumentCriteria) this;
        }
        
        public SailApplicationDocumentCriteria andImageurlIsNull() {
            addCriterion("imageurl is null");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andImageurlIsNotNull() {
            addCriterion("imageurl is not null");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andImageurlEqualTo(java.lang.String value) {
            if (value != null)
              addCriterion("imageurl =", value, "imageurl");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andImageurlNotEqualTo(java.lang.String value) {
            if (value != null)
              addCriterion("imageurl <>", value, "imageurl");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andImageurlGreaterThan(java.lang.String value) {
            if (value != null)
              addCriterion("imageurl >", value, "imageurl");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andImageurlGreaterThanOrEqualTo(java.lang.String value) {
            if (value != null)
              addCriterion("imageurl >=", value, "imageurl");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andImageurlLessThan(java.lang.String value) {
            if (value != null)
              addCriterion("imageurl <", value, "imageurl");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andImageurlLessThanOrEqualTo(java.lang.String value) {
            if (value != null)
              addCriterion("imageurl <=", value, "imageurl");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andImageurlLike(java.lang.String value) {
            if (value != null)
              addCriterion("imageurl like ", value, "imageurl");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andImageurlNotLike(java.lang.String value) {
            if (value != null)
              addCriterion("imageurl not like ", value, "imageurl");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andImageurlIn(java.util.List<java.lang.String> value) {
            if (value != null && value.size() > 0)
              addCriterion("imageurl in ", value, "imageurl");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andImageurlNotIn(java.util.List<java.lang.String> value) {
            if (value != null && value.size() > 0)
               addCriterion("imageurl not in ", value, "imageurl");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andImageurlBetween(java.lang.String value1, java.lang.String value2) {
            if (value1 != null && value2 != null)
              addCriterion("imageurl between ", value1, value2, "imageurl");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andImageurlNotBetween(java.lang.String value1, java.lang.String value2) {
            if (value1 != null && value2 != null)
              addCriterion("imageurl not between ", value1, value2, "imageurl");
            return (SailApplicationDocumentCriteria) this;
        }
        
        public SailApplicationDocumentCriteria andImageheightIsNull() {
            addCriterion("imageheight is null");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andImageheightIsNotNull() {
            addCriterion("imageheight is not null");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andImageheightEqualTo(java.lang.Integer value) {
            if (value != null)
              addCriterion("imageheight =", value, "imageheight");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andImageheightNotEqualTo(java.lang.Integer value) {
            if (value != null)
              addCriterion("imageheight <>", value, "imageheight");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andImageheightGreaterThan(java.lang.Integer value) {
            if (value != null)
              addCriterion("imageheight >", value, "imageheight");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andImageheightGreaterThanOrEqualTo(java.lang.Integer value) {
            if (value != null)
              addCriterion("imageheight >=", value, "imageheight");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andImageheightLessThan(java.lang.Integer value) {
            if (value != null)
              addCriterion("imageheight <", value, "imageheight");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andImageheightLessThanOrEqualTo(java.lang.Integer value) {
            if (value != null)
              addCriterion("imageheight <=", value, "imageheight");
            return (SailApplicationDocumentCriteria) this;
        }

        
        public SailApplicationDocumentCriteria andImagewidthIsNull() {
            addCriterion("imagewidth is null");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andImagewidthIsNotNull() {
            addCriterion("imagewidth is not null");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andImagewidthEqualTo(java.lang.Integer value) {
            if (value != null)
              addCriterion("imagewidth =", value, "imagewidth");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andImagewidthNotEqualTo(java.lang.Integer value) {
            if (value != null)
              addCriterion("imagewidth <>", value, "imagewidth");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andImagewidthGreaterThan(java.lang.Integer value) {
            if (value != null)
              addCriterion("imagewidth >", value, "imagewidth");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andImagewidthGreaterThanOrEqualTo(java.lang.Integer value) {
            if (value != null)
              addCriterion("imagewidth >=", value, "imagewidth");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andImagewidthLessThan(java.lang.Integer value) {
            if (value != null)
              addCriterion("imagewidth <", value, "imagewidth");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andImagewidthLessThanOrEqualTo(java.lang.Integer value) {
            if (value != null)
              addCriterion("imagewidth <=", value, "imagewidth");
            return (SailApplicationDocumentCriteria) this;
        }

        
        public SailApplicationDocumentCriteria andIconurlIsNull() {
            addCriterion("iconurl is null");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andIconurlIsNotNull() {
            addCriterion("iconurl is not null");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andIconurlEqualTo(java.lang.String value) {
            if (value != null)
              addCriterion("iconurl =", value, "iconurl");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andIconurlNotEqualTo(java.lang.String value) {
            if (value != null)
              addCriterion("iconurl <>", value, "iconurl");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andIconurlGreaterThan(java.lang.String value) {
            if (value != null)
              addCriterion("iconurl >", value, "iconurl");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andIconurlGreaterThanOrEqualTo(java.lang.String value) {
            if (value != null)
              addCriterion("iconurl >=", value, "iconurl");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andIconurlLessThan(java.lang.String value) {
            if (value != null)
              addCriterion("iconurl <", value, "iconurl");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andIconurlLessThanOrEqualTo(java.lang.String value) {
            if (value != null)
              addCriterion("iconurl <=", value, "iconurl");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andIconurlLike(java.lang.String value) {
            if (value != null)
              addCriterion("iconurl like ", value, "iconurl");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andIconurlNotLike(java.lang.String value) {
            if (value != null)
              addCriterion("iconurl not like ", value, "iconurl");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andIconurlIn(java.util.List<java.lang.String> value) {
            if (value != null && value.size() > 0)
              addCriterion("iconurl in ", value, "iconurl");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andIconurlNotIn(java.util.List<java.lang.String> value) {
            if (value != null && value.size() > 0)
               addCriterion("iconurl not in ", value, "iconurl");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andIconurlBetween(java.lang.String value1, java.lang.String value2) {
            if (value1 != null && value2 != null)
              addCriterion("iconurl between ", value1, value2, "iconurl");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andIconurlNotBetween(java.lang.String value1, java.lang.String value2) {
            if (value1 != null && value2 != null)
              addCriterion("iconurl not between ", value1, value2, "iconurl");
            return (SailApplicationDocumentCriteria) this;
        }
        
        public SailApplicationDocumentCriteria andIconwidthIsNull() {
            addCriterion("iconwidth is null");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andIconwidthIsNotNull() {
            addCriterion("iconwidth is not null");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andIconwidthEqualTo(java.lang.Integer value) {
            if (value != null)
              addCriterion("iconwidth =", value, "iconwidth");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andIconwidthNotEqualTo(java.lang.Integer value) {
            if (value != null)
              addCriterion("iconwidth <>", value, "iconwidth");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andIconwidthGreaterThan(java.lang.Integer value) {
            if (value != null)
              addCriterion("iconwidth >", value, "iconwidth");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andIconwidthGreaterThanOrEqualTo(java.lang.Integer value) {
            if (value != null)
              addCriterion("iconwidth >=", value, "iconwidth");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andIconwidthLessThan(java.lang.Integer value) {
            if (value != null)
              addCriterion("iconwidth <", value, "iconwidth");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andIconwidthLessThanOrEqualTo(java.lang.Integer value) {
            if (value != null)
              addCriterion("iconwidth <=", value, "iconwidth");
            return (SailApplicationDocumentCriteria) this;
        }

        
        public SailApplicationDocumentCriteria andIconheightIsNull() {
            addCriterion("iconheight is null");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andIconheightIsNotNull() {
            addCriterion("iconheight is not null");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andIconheightEqualTo(java.lang.Integer value) {
            if (value != null)
              addCriterion("iconheight =", value, "iconheight");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andIconheightNotEqualTo(java.lang.Integer value) {
            if (value != null)
              addCriterion("iconheight <>", value, "iconheight");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andIconheightGreaterThan(java.lang.Integer value) {
            if (value != null)
              addCriterion("iconheight >", value, "iconheight");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andIconheightGreaterThanOrEqualTo(java.lang.Integer value) {
            if (value != null)
              addCriterion("iconheight >=", value, "iconheight");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andIconheightLessThan(java.lang.Integer value) {
            if (value != null)
              addCriterion("iconheight <", value, "iconheight");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andIconheightLessThanOrEqualTo(java.lang.Integer value) {
            if (value != null)
              addCriterion("iconheight <=", value, "iconheight");
            return (SailApplicationDocumentCriteria) this;
        }

        
        public SailApplicationDocumentCriteria andUploadtimestampIsNull() {
            addCriterion("uploadtimestamp is null");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andUploadtimestampIsNotNull() {
            addCriterion("uploadtimestamp is not null");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andUploadtimestampEqualTo(java.sql.Timestamp value) {
            if (value != null)
              addCriterion("uploadtimestamp =", value, "uploadtimestamp");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andUploadtimestampNotEqualTo(java.sql.Timestamp value) {
            if (value != null)
              addCriterion("uploadtimestamp <>", value, "uploadtimestamp");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andUploadtimestampGreaterThan(java.sql.Timestamp value) {
            if (value != null)
              addCriterion("uploadtimestamp >", value, "uploadtimestamp");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andUploadtimestampGreaterThanOrEqualTo(java.sql.Timestamp value) {
            if (value != null)
              addCriterion("uploadtimestamp >=", value, "uploadtimestamp");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andUploadtimestampLessThan(java.sql.Timestamp value) {
            if (value != null)
              addCriterion("uploadtimestamp <", value, "uploadtimestamp");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andUploadtimestampLessThanOrEqualTo(java.sql.Timestamp value) {
            if (value != null)
              addCriterion("uploadtimestamp <=", value, "uploadtimestamp");
            return (SailApplicationDocumentCriteria) this;
        }

        
        public SailApplicationDocumentCriteria andCrewmemberidIsNull() {
            addCriterion("crewmemberid is null");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andCrewmemberidIsNotNull() {
            addCriterion("crewmemberid is not null");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andCrewmemberidEqualTo(java.lang.String value) {
            if (value != null)
              addCriterion("crewmemberid =", value, "crewmemberid");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andCrewmemberidNotEqualTo(java.lang.String value) {
            if (value != null)
              addCriterion("crewmemberid <>", value, "crewmemberid");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andCrewmemberidGreaterThan(java.lang.String value) {
            if (value != null)
              addCriterion("crewmemberid >", value, "crewmemberid");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andCrewmemberidGreaterThanOrEqualTo(java.lang.String value) {
            if (value != null)
              addCriterion("crewmemberid >=", value, "crewmemberid");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andCrewmemberidLessThan(java.lang.String value) {
            if (value != null)
              addCriterion("crewmemberid <", value, "crewmemberid");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andCrewmemberidLessThanOrEqualTo(java.lang.String value) {
            if (value != null)
              addCriterion("crewmemberid <=", value, "crewmemberid");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andCrewmemberidLike(java.lang.String value) {
            if (value != null)
              addCriterion("crewmemberid like ", value, "crewmemberid");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andCrewmemberidNotLike(java.lang.String value) {
            if (value != null)
              addCriterion("crewmemberid not like ", value, "crewmemberid");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andCrewmemberidIn(java.util.List<java.lang.String> value) {
            if (value != null && value.size() > 0)
              addCriterion("crewmemberid in ", value, "crewmemberid");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andCrewmemberidNotIn(java.util.List<java.lang.String> value) {
            if (value != null && value.size() > 0)
               addCriterion("crewmemberid not in ", value, "crewmemberid");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andCrewmemberidBetween(java.lang.String value1, java.lang.String value2) {
            if (value1 != null && value2 != null)
              addCriterion("crewmemberid between ", value1, value2, "crewmemberid");
            return (SailApplicationDocumentCriteria) this;
        }
        public SailApplicationDocumentCriteria andCrewmemberidNotBetween(java.lang.String value1, java.lang.String value2) {
            if (value1 != null && value2 != null)
              addCriterion("crewmemberid not between ", value1, value2, "crewmemberid");
            return (SailApplicationDocumentCriteria) this;
        }
    }
    
}

