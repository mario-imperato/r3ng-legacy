//
// generated by jGAMe Software - GPA Gruppo Progetti Avanzati s.r.l. 2016-2017
//
//
// README Section
//


package org.r3.db.system.eventlog;

import java.util.List;
import java.util.ArrayList;

public class EventLogFilter{
    protected String orderByClause;
    protected String  groupByClause;
    protected boolean distinct;
    protected int     limitFetch;
    
    protected List<org.r3.db.utils.Criteria> oredCriteria;

    public EventLogFilter() 
    {
        oredCriteria = new ArrayList<org.r3.db.utils.Criteria>();
        limitFetch = 0;
        groupByClause = null;
    }
    
    public String getGroupByClause()
	  {
	  	return groupByClause;
	  }
    
	  public void setGroupByClause(String groupByClause)
	  {
	  	this.groupByClause = groupByClause;
	  }
	
	  public boolean isGroupBy(String aColumnName)
	  {
	  	return groupByClause != null && groupByClause.indexOf(aColumnName) >= 0;
	  }
	
    public void setOrderByClause(String orderByClause) 
    {
        this.orderByClause = orderByClause;
    }
    
    public String getOrderByClause() 
    {
        return orderByClause;
    }

    public int getLimitFetch()
  	{
		   return limitFetch;
	  }

	  public void setLimitFetch(int limitFetch)
	  {
		  this.limitFetch = limitFetch;
	  }

    public void setDistinct(boolean distinct) 
    {
        this.distinct = distinct;
    }

    public boolean isDistinct() 
    {
        return distinct;
    }

    public List<org.r3.db.utils.Criteria> getOredCriteria() 
    {
        return oredCriteria;
    }

    public void or(org.r3.db.utils.Criteria criteria) 
    {
        oredCriteria.add(criteria);
    }

    public EventLogCriteria or() 
    {
        EventLogCriteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    public EventLogCriteria createCriteria() 
    {
        EventLogCriteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    protected EventLogCriteria createCriteriaInternal() 
    {
        EventLogCriteria criteria = new EventLogCriteria();
        return criteria;
    }

    public void clear() 
    {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    public static abstract class EventLogCriteriaBase extends org.r3.db.utils.Criteria
    {
        
        public EventLogCriteria andEventidIsNull() {
            addCriterion("eventid is null");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andEventidIsNotNull() {
            addCriterion("eventid is not null");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andEventidEqualTo(java.lang.Integer value) {
            if (value != null)
              addCriterion("eventid =", value, "eventid");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andEventidNotEqualTo(java.lang.Integer value) {
            if (value != null)
              addCriterion("eventid <>", value, "eventid");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andEventidGreaterThan(java.lang.Integer value) {
            if (value != null)
              addCriterion("eventid >", value, "eventid");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andEventidGreaterThanOrEqualTo(java.lang.Integer value) {
            if (value != null)
              addCriterion("eventid >=", value, "eventid");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andEventidLessThan(java.lang.Integer value) {
            if (value != null)
              addCriterion("eventid <", value, "eventid");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andEventidLessThanOrEqualTo(java.lang.Integer value) {
            if (value != null)
              addCriterion("eventid <=", value, "eventid");
            return (EventLogCriteria) this;
        }

        
        public EventLogCriteria andSiteIsNull() {
            addCriterion("site is null");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andSiteIsNotNull() {
            addCriterion("site is not null");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andSiteEqualTo(java.lang.String value) {
            if (value != null)
              addCriterion("site =", value, "site");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andSiteNotEqualTo(java.lang.String value) {
            if (value != null)
              addCriterion("site <>", value, "site");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andSiteGreaterThan(java.lang.String value) {
            if (value != null)
              addCriterion("site >", value, "site");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andSiteGreaterThanOrEqualTo(java.lang.String value) {
            if (value != null)
              addCriterion("site >=", value, "site");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andSiteLessThan(java.lang.String value) {
            if (value != null)
              addCriterion("site <", value, "site");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andSiteLessThanOrEqualTo(java.lang.String value) {
            if (value != null)
              addCriterion("site <=", value, "site");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andSiteLike(java.lang.String value) {
            if (value != null)
              addCriterion("site like ", value, "site");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andSiteNotLike(java.lang.String value) {
            if (value != null)
              addCriterion("site not like ", value, "site");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andSiteIn(java.util.List<java.lang.String> value) {
            if (value != null && value.size() > 0)
              addCriterion("site in ", value, "site");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andSiteNotIn(java.util.List<java.lang.String> value) {
            if (value != null && value.size() > 0)
               addCriterion("site not in ", value, "site");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andSiteBetween(java.lang.String value1, java.lang.String value2) {
            if (value1 != null && value2 != null)
              addCriterion("site between ", value1, value2, "site");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andSiteNotBetween(java.lang.String value1, java.lang.String value2) {
            if (value1 != null && value2 != null)
              addCriterion("site not between ", value1, value2, "site");
            return (EventLogCriteria) this;
        }
        
        public EventLogCriteria andUsecaseambitIsNull() {
            addCriterion("usecaseambit is null");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andUsecaseambitIsNotNull() {
            addCriterion("usecaseambit is not null");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andUsecaseambitEqualTo(java.lang.String value) {
            if (value != null)
              addCriterion("usecaseambit =", value, "usecaseambit");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andUsecaseambitNotEqualTo(java.lang.String value) {
            if (value != null)
              addCriterion("usecaseambit <>", value, "usecaseambit");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andUsecaseambitGreaterThan(java.lang.String value) {
            if (value != null)
              addCriterion("usecaseambit >", value, "usecaseambit");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andUsecaseambitGreaterThanOrEqualTo(java.lang.String value) {
            if (value != null)
              addCriterion("usecaseambit >=", value, "usecaseambit");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andUsecaseambitLessThan(java.lang.String value) {
            if (value != null)
              addCriterion("usecaseambit <", value, "usecaseambit");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andUsecaseambitLessThanOrEqualTo(java.lang.String value) {
            if (value != null)
              addCriterion("usecaseambit <=", value, "usecaseambit");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andUsecaseambitLike(java.lang.String value) {
            if (value != null)
              addCriterion("usecaseambit like ", value, "usecaseambit");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andUsecaseambitNotLike(java.lang.String value) {
            if (value != null)
              addCriterion("usecaseambit not like ", value, "usecaseambit");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andUsecaseambitIn(java.util.List<java.lang.String> value) {
            if (value != null && value.size() > 0)
              addCriterion("usecaseambit in ", value, "usecaseambit");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andUsecaseambitNotIn(java.util.List<java.lang.String> value) {
            if (value != null && value.size() > 0)
               addCriterion("usecaseambit not in ", value, "usecaseambit");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andUsecaseambitBetween(java.lang.String value1, java.lang.String value2) {
            if (value1 != null && value2 != null)
              addCriterion("usecaseambit between ", value1, value2, "usecaseambit");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andUsecaseambitNotBetween(java.lang.String value1, java.lang.String value2) {
            if (value1 != null && value2 != null)
              addCriterion("usecaseambit not between ", value1, value2, "usecaseambit");
            return (EventLogCriteria) this;
        }
        
        public EventLogCriteria andUsecaseIsNull() {
            addCriterion("usecase is null");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andUsecaseIsNotNull() {
            addCriterion("usecase is not null");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andUsecaseEqualTo(java.lang.String value) {
            if (value != null)
              addCriterion("usecase =", value, "usecase");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andUsecaseNotEqualTo(java.lang.String value) {
            if (value != null)
              addCriterion("usecase <>", value, "usecase");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andUsecaseGreaterThan(java.lang.String value) {
            if (value != null)
              addCriterion("usecase >", value, "usecase");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andUsecaseGreaterThanOrEqualTo(java.lang.String value) {
            if (value != null)
              addCriterion("usecase >=", value, "usecase");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andUsecaseLessThan(java.lang.String value) {
            if (value != null)
              addCriterion("usecase <", value, "usecase");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andUsecaseLessThanOrEqualTo(java.lang.String value) {
            if (value != null)
              addCriterion("usecase <=", value, "usecase");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andUsecaseLike(java.lang.String value) {
            if (value != null)
              addCriterion("usecase like ", value, "usecase");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andUsecaseNotLike(java.lang.String value) {
            if (value != null)
              addCriterion("usecase not like ", value, "usecase");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andUsecaseIn(java.util.List<java.lang.String> value) {
            if (value != null && value.size() > 0)
              addCriterion("usecase in ", value, "usecase");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andUsecaseNotIn(java.util.List<java.lang.String> value) {
            if (value != null && value.size() > 0)
               addCriterion("usecase not in ", value, "usecase");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andUsecaseBetween(java.lang.String value1, java.lang.String value2) {
            if (value1 != null && value2 != null)
              addCriterion("usecase between ", value1, value2, "usecase");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andUsecaseNotBetween(java.lang.String value1, java.lang.String value2) {
            if (value1 != null && value2 != null)
              addCriterion("usecase not between ", value1, value2, "usecase");
            return (EventLogCriteria) this;
        }
        
        public EventLogCriteria andReasonIsNull() {
            addCriterion("reason is null");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andReasonIsNotNull() {
            addCriterion("reason is not null");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andReasonEqualTo(java.lang.String value) {
            if (value != null)
              addCriterion("reason =", value, "reason");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andReasonNotEqualTo(java.lang.String value) {
            if (value != null)
              addCriterion("reason <>", value, "reason");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andReasonGreaterThan(java.lang.String value) {
            if (value != null)
              addCriterion("reason >", value, "reason");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andReasonGreaterThanOrEqualTo(java.lang.String value) {
            if (value != null)
              addCriterion("reason >=", value, "reason");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andReasonLessThan(java.lang.String value) {
            if (value != null)
              addCriterion("reason <", value, "reason");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andReasonLessThanOrEqualTo(java.lang.String value) {
            if (value != null)
              addCriterion("reason <=", value, "reason");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andReasonLike(java.lang.String value) {
            if (value != null)
              addCriterion("reason like ", value, "reason");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andReasonNotLike(java.lang.String value) {
            if (value != null)
              addCriterion("reason not like ", value, "reason");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andReasonIn(java.util.List<java.lang.String> value) {
            if (value != null && value.size() > 0)
              addCriterion("reason in ", value, "reason");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andReasonNotIn(java.util.List<java.lang.String> value) {
            if (value != null && value.size() > 0)
               addCriterion("reason not in ", value, "reason");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andReasonBetween(java.lang.String value1, java.lang.String value2) {
            if (value1 != null && value2 != null)
              addCriterion("reason between ", value1, value2, "reason");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andReasonNotBetween(java.lang.String value1, java.lang.String value2) {
            if (value1 != null && value2 != null)
              addCriterion("reason not between ", value1, value2, "reason");
            return (EventLogCriteria) this;
        }
        
        public EventLogCriteria andRefentityid1IsNull() {
            addCriterion("refentityid1 is null");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andRefentityid1IsNotNull() {
            addCriterion("refentityid1 is not null");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andRefentityid1EqualTo(java.lang.String value) {
            if (value != null)
              addCriterion("refentityid1 =", value, "refentityid1");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andRefentityid1NotEqualTo(java.lang.String value) {
            if (value != null)
              addCriterion("refentityid1 <>", value, "refentityid1");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andRefentityid1GreaterThan(java.lang.String value) {
            if (value != null)
              addCriterion("refentityid1 >", value, "refentityid1");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andRefentityid1GreaterThanOrEqualTo(java.lang.String value) {
            if (value != null)
              addCriterion("refentityid1 >=", value, "refentityid1");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andRefentityid1LessThan(java.lang.String value) {
            if (value != null)
              addCriterion("refentityid1 <", value, "refentityid1");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andRefentityid1LessThanOrEqualTo(java.lang.String value) {
            if (value != null)
              addCriterion("refentityid1 <=", value, "refentityid1");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andRefentityid1Like(java.lang.String value) {
            if (value != null)
              addCriterion("refentityid1 like ", value, "refentityid1");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andRefentityid1NotLike(java.lang.String value) {
            if (value != null)
              addCriterion("refentityid1 not like ", value, "refentityid1");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andRefentityid1In(java.util.List<java.lang.String> value) {
            if (value != null && value.size() > 0)
              addCriterion("refentityid1 in ", value, "refentityid1");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andRefentityid1NotIn(java.util.List<java.lang.String> value) {
            if (value != null && value.size() > 0)
               addCriterion("refentityid1 not in ", value, "refentityid1");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andRefentityid1Between(java.lang.String value1, java.lang.String value2) {
            if (value1 != null && value2 != null)
              addCriterion("refentityid1 between ", value1, value2, "refentityid1");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andRefentityid1NotBetween(java.lang.String value1, java.lang.String value2) {
            if (value1 != null && value2 != null)
              addCriterion("refentityid1 not between ", value1, value2, "refentityid1");
            return (EventLogCriteria) this;
        }
        
        public EventLogCriteria andRefentityid2IsNull() {
            addCriterion("refentityid2 is null");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andRefentityid2IsNotNull() {
            addCriterion("refentityid2 is not null");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andRefentityid2EqualTo(java.lang.String value) {
            if (value != null)
              addCriterion("refentityid2 =", value, "refentityid2");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andRefentityid2NotEqualTo(java.lang.String value) {
            if (value != null)
              addCriterion("refentityid2 <>", value, "refentityid2");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andRefentityid2GreaterThan(java.lang.String value) {
            if (value != null)
              addCriterion("refentityid2 >", value, "refentityid2");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andRefentityid2GreaterThanOrEqualTo(java.lang.String value) {
            if (value != null)
              addCriterion("refentityid2 >=", value, "refentityid2");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andRefentityid2LessThan(java.lang.String value) {
            if (value != null)
              addCriterion("refentityid2 <", value, "refentityid2");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andRefentityid2LessThanOrEqualTo(java.lang.String value) {
            if (value != null)
              addCriterion("refentityid2 <=", value, "refentityid2");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andRefentityid2Like(java.lang.String value) {
            if (value != null)
              addCriterion("refentityid2 like ", value, "refentityid2");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andRefentityid2NotLike(java.lang.String value) {
            if (value != null)
              addCriterion("refentityid2 not like ", value, "refentityid2");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andRefentityid2In(java.util.List<java.lang.String> value) {
            if (value != null && value.size() > 0)
              addCriterion("refentityid2 in ", value, "refentityid2");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andRefentityid2NotIn(java.util.List<java.lang.String> value) {
            if (value != null && value.size() > 0)
               addCriterion("refentityid2 not in ", value, "refentityid2");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andRefentityid2Between(java.lang.String value1, java.lang.String value2) {
            if (value1 != null && value2 != null)
              addCriterion("refentityid2 between ", value1, value2, "refentityid2");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andRefentityid2NotBetween(java.lang.String value1, java.lang.String value2) {
            if (value1 != null && value2 != null)
              addCriterion("refentityid2 not between ", value1, value2, "refentityid2");
            return (EventLogCriteria) this;
        }
        
        public EventLogCriteria andRefentityid3IsNull() {
            addCriterion("refentityid3 is null");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andRefentityid3IsNotNull() {
            addCriterion("refentityid3 is not null");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andRefentityid3EqualTo(java.lang.String value) {
            if (value != null)
              addCriterion("refentityid3 =", value, "refentityid3");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andRefentityid3NotEqualTo(java.lang.String value) {
            if (value != null)
              addCriterion("refentityid3 <>", value, "refentityid3");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andRefentityid3GreaterThan(java.lang.String value) {
            if (value != null)
              addCriterion("refentityid3 >", value, "refentityid3");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andRefentityid3GreaterThanOrEqualTo(java.lang.String value) {
            if (value != null)
              addCriterion("refentityid3 >=", value, "refentityid3");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andRefentityid3LessThan(java.lang.String value) {
            if (value != null)
              addCriterion("refentityid3 <", value, "refentityid3");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andRefentityid3LessThanOrEqualTo(java.lang.String value) {
            if (value != null)
              addCriterion("refentityid3 <=", value, "refentityid3");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andRefentityid3Like(java.lang.String value) {
            if (value != null)
              addCriterion("refentityid3 like ", value, "refentityid3");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andRefentityid3NotLike(java.lang.String value) {
            if (value != null)
              addCriterion("refentityid3 not like ", value, "refentityid3");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andRefentityid3In(java.util.List<java.lang.String> value) {
            if (value != null && value.size() > 0)
              addCriterion("refentityid3 in ", value, "refentityid3");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andRefentityid3NotIn(java.util.List<java.lang.String> value) {
            if (value != null && value.size() > 0)
               addCriterion("refentityid3 not in ", value, "refentityid3");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andRefentityid3Between(java.lang.String value1, java.lang.String value2) {
            if (value1 != null && value2 != null)
              addCriterion("refentityid3 between ", value1, value2, "refentityid3");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andRefentityid3NotBetween(java.lang.String value1, java.lang.String value2) {
            if (value1 != null && value2 != null)
              addCriterion("refentityid3 not between ", value1, value2, "refentityid3");
            return (EventLogCriteria) this;
        }
        
        public EventLogCriteria andRefentityid4IsNull() {
            addCriterion("refentityid4 is null");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andRefentityid4IsNotNull() {
            addCriterion("refentityid4 is not null");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andRefentityid4EqualTo(java.lang.String value) {
            if (value != null)
              addCriterion("refentityid4 =", value, "refentityid4");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andRefentityid4NotEqualTo(java.lang.String value) {
            if (value != null)
              addCriterion("refentityid4 <>", value, "refentityid4");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andRefentityid4GreaterThan(java.lang.String value) {
            if (value != null)
              addCriterion("refentityid4 >", value, "refentityid4");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andRefentityid4GreaterThanOrEqualTo(java.lang.String value) {
            if (value != null)
              addCriterion("refentityid4 >=", value, "refentityid4");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andRefentityid4LessThan(java.lang.String value) {
            if (value != null)
              addCriterion("refentityid4 <", value, "refentityid4");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andRefentityid4LessThanOrEqualTo(java.lang.String value) {
            if (value != null)
              addCriterion("refentityid4 <=", value, "refentityid4");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andRefentityid4Like(java.lang.String value) {
            if (value != null)
              addCriterion("refentityid4 like ", value, "refentityid4");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andRefentityid4NotLike(java.lang.String value) {
            if (value != null)
              addCriterion("refentityid4 not like ", value, "refentityid4");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andRefentityid4In(java.util.List<java.lang.String> value) {
            if (value != null && value.size() > 0)
              addCriterion("refentityid4 in ", value, "refentityid4");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andRefentityid4NotIn(java.util.List<java.lang.String> value) {
            if (value != null && value.size() > 0)
               addCriterion("refentityid4 not in ", value, "refentityid4");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andRefentityid4Between(java.lang.String value1, java.lang.String value2) {
            if (value1 != null && value2 != null)
              addCriterion("refentityid4 between ", value1, value2, "refentityid4");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andRefentityid4NotBetween(java.lang.String value1, java.lang.String value2) {
            if (value1 != null && value2 != null)
              addCriterion("refentityid4 not between ", value1, value2, "refentityid4");
            return (EventLogCriteria) this;
        }
        
        public EventLogCriteria andRefentityid5IsNull() {
            addCriterion("refentityid5 is null");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andRefentityid5IsNotNull() {
            addCriterion("refentityid5 is not null");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andRefentityid5EqualTo(java.lang.String value) {
            if (value != null)
              addCriterion("refentityid5 =", value, "refentityid5");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andRefentityid5NotEqualTo(java.lang.String value) {
            if (value != null)
              addCriterion("refentityid5 <>", value, "refentityid5");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andRefentityid5GreaterThan(java.lang.String value) {
            if (value != null)
              addCriterion("refentityid5 >", value, "refentityid5");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andRefentityid5GreaterThanOrEqualTo(java.lang.String value) {
            if (value != null)
              addCriterion("refentityid5 >=", value, "refentityid5");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andRefentityid5LessThan(java.lang.String value) {
            if (value != null)
              addCriterion("refentityid5 <", value, "refentityid5");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andRefentityid5LessThanOrEqualTo(java.lang.String value) {
            if (value != null)
              addCriterion("refentityid5 <=", value, "refentityid5");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andRefentityid5Like(java.lang.String value) {
            if (value != null)
              addCriterion("refentityid5 like ", value, "refentityid5");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andRefentityid5NotLike(java.lang.String value) {
            if (value != null)
              addCriterion("refentityid5 not like ", value, "refentityid5");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andRefentityid5In(java.util.List<java.lang.String> value) {
            if (value != null && value.size() > 0)
              addCriterion("refentityid5 in ", value, "refentityid5");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andRefentityid5NotIn(java.util.List<java.lang.String> value) {
            if (value != null && value.size() > 0)
               addCriterion("refentityid5 not in ", value, "refentityid5");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andRefentityid5Between(java.lang.String value1, java.lang.String value2) {
            if (value1 != null && value2 != null)
              addCriterion("refentityid5 between ", value1, value2, "refentityid5");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andRefentityid5NotBetween(java.lang.String value1, java.lang.String value2) {
            if (value1 != null && value2 != null)
              addCriterion("refentityid5 not between ", value1, value2, "refentityid5");
            return (EventLogCriteria) this;
        }
        
        public EventLogCriteria andRefdate1IsNull() {
            addCriterion("refdate1 is null");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andRefdate1IsNotNull() {
            addCriterion("refdate1 is not null");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andRefdate1EqualTo(java.sql.Timestamp value) {
            if (value != null)
              addCriterion("refdate1 =", value, "refdate1");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andRefdate1NotEqualTo(java.sql.Timestamp value) {
            if (value != null)
              addCriterion("refdate1 <>", value, "refdate1");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andRefdate1GreaterThan(java.sql.Timestamp value) {
            if (value != null)
              addCriterion("refdate1 >", value, "refdate1");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andRefdate1GreaterThanOrEqualTo(java.sql.Timestamp value) {
            if (value != null)
              addCriterion("refdate1 >=", value, "refdate1");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andRefdate1LessThan(java.sql.Timestamp value) {
            if (value != null)
              addCriterion("refdate1 <", value, "refdate1");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andRefdate1LessThanOrEqualTo(java.sql.Timestamp value) {
            if (value != null)
              addCriterion("refdate1 <=", value, "refdate1");
            return (EventLogCriteria) this;
        }

        
        public EventLogCriteria andRefdate2IsNull() {
            addCriterion("refdate2 is null");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andRefdate2IsNotNull() {
            addCriterion("refdate2 is not null");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andRefdate2EqualTo(java.sql.Timestamp value) {
            if (value != null)
              addCriterion("refdate2 =", value, "refdate2");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andRefdate2NotEqualTo(java.sql.Timestamp value) {
            if (value != null)
              addCriterion("refdate2 <>", value, "refdate2");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andRefdate2GreaterThan(java.sql.Timestamp value) {
            if (value != null)
              addCriterion("refdate2 >", value, "refdate2");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andRefdate2GreaterThanOrEqualTo(java.sql.Timestamp value) {
            if (value != null)
              addCriterion("refdate2 >=", value, "refdate2");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andRefdate2LessThan(java.sql.Timestamp value) {
            if (value != null)
              addCriterion("refdate2 <", value, "refdate2");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andRefdate2LessThanOrEqualTo(java.sql.Timestamp value) {
            if (value != null)
              addCriterion("refdate2 <=", value, "refdate2");
            return (EventLogCriteria) this;
        }

        
        public EventLogCriteria andCounter1IsNull() {
            addCriterion("counter1 is null");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andCounter1IsNotNull() {
            addCriterion("counter1 is not null");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andCounter1EqualTo(java.lang.Integer value) {
            if (value != null)
              addCriterion("counter1 =", value, "counter1");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andCounter1NotEqualTo(java.lang.Integer value) {
            if (value != null)
              addCriterion("counter1 <>", value, "counter1");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andCounter1GreaterThan(java.lang.Integer value) {
            if (value != null)
              addCriterion("counter1 >", value, "counter1");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andCounter1GreaterThanOrEqualTo(java.lang.Integer value) {
            if (value != null)
              addCriterion("counter1 >=", value, "counter1");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andCounter1LessThan(java.lang.Integer value) {
            if (value != null)
              addCriterion("counter1 <", value, "counter1");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andCounter1LessThanOrEqualTo(java.lang.Integer value) {
            if (value != null)
              addCriterion("counter1 <=", value, "counter1");
            return (EventLogCriteria) this;
        }

        
        public EventLogCriteria andCounter2IsNull() {
            addCriterion("counter2 is null");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andCounter2IsNotNull() {
            addCriterion("counter2 is not null");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andCounter2EqualTo(java.lang.Integer value) {
            if (value != null)
              addCriterion("counter2 =", value, "counter2");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andCounter2NotEqualTo(java.lang.Integer value) {
            if (value != null)
              addCriterion("counter2 <>", value, "counter2");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andCounter2GreaterThan(java.lang.Integer value) {
            if (value != null)
              addCriterion("counter2 >", value, "counter2");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andCounter2GreaterThanOrEqualTo(java.lang.Integer value) {
            if (value != null)
              addCriterion("counter2 >=", value, "counter2");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andCounter2LessThan(java.lang.Integer value) {
            if (value != null)
              addCriterion("counter2 <", value, "counter2");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andCounter2LessThanOrEqualTo(java.lang.Integer value) {
            if (value != null)
              addCriterion("counter2 <=", value, "counter2");
            return (EventLogCriteria) this;
        }

        
        public EventLogCriteria andCounter3IsNull() {
            addCriterion("counter3 is null");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andCounter3IsNotNull() {
            addCriterion("counter3 is not null");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andCounter3EqualTo(java.lang.Integer value) {
            if (value != null)
              addCriterion("counter3 =", value, "counter3");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andCounter3NotEqualTo(java.lang.Integer value) {
            if (value != null)
              addCriterion("counter3 <>", value, "counter3");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andCounter3GreaterThan(java.lang.Integer value) {
            if (value != null)
              addCriterion("counter3 >", value, "counter3");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andCounter3GreaterThanOrEqualTo(java.lang.Integer value) {
            if (value != null)
              addCriterion("counter3 >=", value, "counter3");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andCounter3LessThan(java.lang.Integer value) {
            if (value != null)
              addCriterion("counter3 <", value, "counter3");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andCounter3LessThanOrEqualTo(java.lang.Integer value) {
            if (value != null)
              addCriterion("counter3 <=", value, "counter3");
            return (EventLogCriteria) this;
        }

        
        public EventLogCriteria andMsgIsNull() {
            addCriterion("msg is null");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andMsgIsNotNull() {
            addCriterion("msg is not null");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andMsgEqualTo(java.lang.String value) {
            if (value != null)
              addCriterion("msg =", value, "msg");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andMsgNotEqualTo(java.lang.String value) {
            if (value != null)
              addCriterion("msg <>", value, "msg");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andMsgGreaterThan(java.lang.String value) {
            if (value != null)
              addCriterion("msg >", value, "msg");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andMsgGreaterThanOrEqualTo(java.lang.String value) {
            if (value != null)
              addCriterion("msg >=", value, "msg");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andMsgLessThan(java.lang.String value) {
            if (value != null)
              addCriterion("msg <", value, "msg");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andMsgLessThanOrEqualTo(java.lang.String value) {
            if (value != null)
              addCriterion("msg <=", value, "msg");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andMsgLike(java.lang.String value) {
            if (value != null)
              addCriterion("msg like ", value, "msg");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andMsgNotLike(java.lang.String value) {
            if (value != null)
              addCriterion("msg not like ", value, "msg");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andMsgIn(java.util.List<java.lang.String> value) {
            if (value != null && value.size() > 0)
              addCriterion("msg in ", value, "msg");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andMsgNotIn(java.util.List<java.lang.String> value) {
            if (value != null && value.size() > 0)
               addCriterion("msg not in ", value, "msg");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andMsgBetween(java.lang.String value1, java.lang.String value2) {
            if (value1 != null && value2 != null)
              addCriterion("msg between ", value1, value2, "msg");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andMsgNotBetween(java.lang.String value1, java.lang.String value2) {
            if (value1 != null && value2 != null)
              addCriterion("msg not between ", value1, value2, "msg");
            return (EventLogCriteria) this;
        }
        
        public EventLogCriteria andUseridIsNull() {
            addCriterion("userid is null");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andUseridIsNotNull() {
            addCriterion("userid is not null");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andUseridEqualTo(java.lang.String value) {
            if (value != null)
              addCriterion("userid =", value, "userid");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andUseridNotEqualTo(java.lang.String value) {
            if (value != null)
              addCriterion("userid <>", value, "userid");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andUseridGreaterThan(java.lang.String value) {
            if (value != null)
              addCriterion("userid >", value, "userid");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andUseridGreaterThanOrEqualTo(java.lang.String value) {
            if (value != null)
              addCriterion("userid >=", value, "userid");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andUseridLessThan(java.lang.String value) {
            if (value != null)
              addCriterion("userid <", value, "userid");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andUseridLessThanOrEqualTo(java.lang.String value) {
            if (value != null)
              addCriterion("userid <=", value, "userid");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andUseridLike(java.lang.String value) {
            if (value != null)
              addCriterion("userid like ", value, "userid");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andUseridNotLike(java.lang.String value) {
            if (value != null)
              addCriterion("userid not like ", value, "userid");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andUseridIn(java.util.List<java.lang.String> value) {
            if (value != null && value.size() > 0)
              addCriterion("userid in ", value, "userid");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andUseridNotIn(java.util.List<java.lang.String> value) {
            if (value != null && value.size() > 0)
               addCriterion("userid not in ", value, "userid");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andUseridBetween(java.lang.String value1, java.lang.String value2) {
            if (value1 != null && value2 != null)
              addCriterion("userid between ", value1, value2, "userid");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andUseridNotBetween(java.lang.String value1, java.lang.String value2) {
            if (value1 != null && value2 != null)
              addCriterion("userid not between ", value1, value2, "userid");
            return (EventLogCriteria) this;
        }
        
        public EventLogCriteria andUsersessionidIsNull() {
            addCriterion("usersessionid is null");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andUsersessionidIsNotNull() {
            addCriterion("usersessionid is not null");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andUsersessionidEqualTo(java.lang.String value) {
            if (value != null)
              addCriterion("usersessionid =", value, "usersessionid");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andUsersessionidNotEqualTo(java.lang.String value) {
            if (value != null)
              addCriterion("usersessionid <>", value, "usersessionid");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andUsersessionidGreaterThan(java.lang.String value) {
            if (value != null)
              addCriterion("usersessionid >", value, "usersessionid");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andUsersessionidGreaterThanOrEqualTo(java.lang.String value) {
            if (value != null)
              addCriterion("usersessionid >=", value, "usersessionid");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andUsersessionidLessThan(java.lang.String value) {
            if (value != null)
              addCriterion("usersessionid <", value, "usersessionid");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andUsersessionidLessThanOrEqualTo(java.lang.String value) {
            if (value != null)
              addCriterion("usersessionid <=", value, "usersessionid");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andUsersessionidLike(java.lang.String value) {
            if (value != null)
              addCriterion("usersessionid like ", value, "usersessionid");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andUsersessionidNotLike(java.lang.String value) {
            if (value != null)
              addCriterion("usersessionid not like ", value, "usersessionid");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andUsersessionidIn(java.util.List<java.lang.String> value) {
            if (value != null && value.size() > 0)
              addCriterion("usersessionid in ", value, "usersessionid");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andUsersessionidNotIn(java.util.List<java.lang.String> value) {
            if (value != null && value.size() > 0)
               addCriterion("usersessionid not in ", value, "usersessionid");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andUsersessionidBetween(java.lang.String value1, java.lang.String value2) {
            if (value1 != null && value2 != null)
              addCriterion("usersessionid between ", value1, value2, "usersessionid");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andUsersessionidNotBetween(java.lang.String value1, java.lang.String value2) {
            if (value1 != null && value2 != null)
              addCriterion("usersessionid not between ", value1, value2, "usersessionid");
            return (EventLogCriteria) this;
        }
        
        public EventLogCriteria andRecstatusIsNull() {
            addCriterion("recstatus is null");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andRecstatusIsNotNull() {
            addCriterion("recstatus is not null");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andRecstatusEqualTo(java.lang.String value) {
            if (value != null)
              addCriterion("recstatus =", value, "recstatus");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andRecstatusNotEqualTo(java.lang.String value) {
            if (value != null)
              addCriterion("recstatus <>", value, "recstatus");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andRecstatusGreaterThan(java.lang.String value) {
            if (value != null)
              addCriterion("recstatus >", value, "recstatus");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andRecstatusGreaterThanOrEqualTo(java.lang.String value) {
            if (value != null)
              addCriterion("recstatus >=", value, "recstatus");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andRecstatusLessThan(java.lang.String value) {
            if (value != null)
              addCriterion("recstatus <", value, "recstatus");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andRecstatusLessThanOrEqualTo(java.lang.String value) {
            if (value != null)
              addCriterion("recstatus <=", value, "recstatus");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andRecstatusLike(java.lang.String value) {
            if (value != null)
              addCriterion("recstatus like ", value, "recstatus");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andRecstatusNotLike(java.lang.String value) {
            if (value != null)
              addCriterion("recstatus not like ", value, "recstatus");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andRecstatusIn(java.util.List<java.lang.String> value) {
            if (value != null && value.size() > 0)
              addCriterion("recstatus in ", value, "recstatus");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andRecstatusNotIn(java.util.List<java.lang.String> value) {
            if (value != null && value.size() > 0)
               addCriterion("recstatus not in ", value, "recstatus");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andRecstatusBetween(java.lang.String value1, java.lang.String value2) {
            if (value1 != null && value2 != null)
              addCriterion("recstatus between ", value1, value2, "recstatus");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andRecstatusNotBetween(java.lang.String value1, java.lang.String value2) {
            if (value1 != null && value2 != null)
              addCriterion("recstatus not between ", value1, value2, "recstatus");
            return (EventLogCriteria) this;
        }
        
        public EventLogCriteria andRectimestampIsNull() {
            addCriterion("rectimestamp is null");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andRectimestampIsNotNull() {
            addCriterion("rectimestamp is not null");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andRectimestampEqualTo(java.sql.Timestamp value) {
            if (value != null)
              addCriterion("rectimestamp =", value, "rectimestamp");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andRectimestampNotEqualTo(java.sql.Timestamp value) {
            if (value != null)
              addCriterion("rectimestamp <>", value, "rectimestamp");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andRectimestampGreaterThan(java.sql.Timestamp value) {
            if (value != null)
              addCriterion("rectimestamp >", value, "rectimestamp");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andRectimestampGreaterThanOrEqualTo(java.sql.Timestamp value) {
            if (value != null)
              addCriterion("rectimestamp >=", value, "rectimestamp");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andRectimestampLessThan(java.sql.Timestamp value) {
            if (value != null)
              addCriterion("rectimestamp <", value, "rectimestamp");
            return (EventLogCriteria) this;
        }
        public EventLogCriteria andRectimestampLessThanOrEqualTo(java.sql.Timestamp value) {
            if (value != null)
              addCriterion("rectimestamp <=", value, "rectimestamp");
            return (EventLogCriteria) this;
        }

    }
    
}

