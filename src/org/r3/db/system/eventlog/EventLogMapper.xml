<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<!--
  TODO: xmlCopyRight.txt
   
  -->
<!--
  TODO: xmlReadme.txt
   
  -->


<!-- Mapper Target DBMS: [SERVER_MYSQL] -->
<!-- <mapper resource="org/r3/db/system/eventlog/EventLogMapper.xml"/> -->
<mapper namespace="org.r3.db.system.eventlog.EventLogMapper" >
    <resultMap id="BaseResultMap" type="org.r3.db.system.eventlog.EventLogDTO" >
         <id column="eventid" property="eventid" jdbcType="INTEGER" />
           <result column="site" property="site" jdbcType="VARCHAR" />
           <result column="usecaseambit" property="usecaseambit" jdbcType="VARCHAR" />
           <result column="usecase" property="usecase" jdbcType="VARCHAR" />
           <result column="reason" property="reason" jdbcType="VARCHAR" />
           <result column="refentityid1" property="refentityid1" jdbcType="VARCHAR" />
           <result column="refentityid2" property="refentityid2" jdbcType="VARCHAR" />
           <result column="refentityid3" property="refentityid3" jdbcType="VARCHAR" />
           <result column="refentityid4" property="refentityid4" jdbcType="VARCHAR" />
           <result column="refentityid5" property="refentityid5" jdbcType="VARCHAR" />
           <result column="refdate1" property="refdate1" jdbcType="TIMESTAMP" />
           <result column="refdate2" property="refdate2" jdbcType="TIMESTAMP" />
           <result column="counter1" property="counter1" jdbcType="INTEGER" />
           <result column="counter2" property="counter2" jdbcType="INTEGER" />
           <result column="counter3" property="counter3" jdbcType="INTEGER" />
           <result column="msg" property="msg" jdbcType="VARCHAR" />
           <result column="userid" property="userid" jdbcType="VARCHAR" />
           <result column="usersessionid" property="usersessionid" jdbcType="VARCHAR" />
           <result column="recstatus" property="recstatus" jdbcType="VARCHAR" />
           <result column="rectimestamp" property="rectimestamp" jdbcType="TIMESTAMP" />
    </resultMap>

  <sql id="Filter_Where_Clause" >
    <where >
      <foreach collection="filter.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
                <when test="criterion.subSelectCriterion" >
                  and ${criterion.prefixCondition} #{criterion.value} ${criterion.suffixCondition}
                </when>                                
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <!--
  <sql id="Filter_Where_Clause_4_Update" >
    <where >
      <foreach collection="filter.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  -->  
  <sql id="Base_Column_List" >
    eventid,  site,  usecaseambit,  usecase,  reason,  refentityid1,  refentityid2,  refentityid3,  refentityid4,
  refentityid5,  refdate1,  refdate2,  counter1,  counter2,  counter3,  msg,  userid,  usersessionid,
  recstatus,  rectimestamp  </sql>
  
  <sql id='GroupBy_Column_List'>
    <trim suffixOverrides=",">
        <choose>
       <when test="filter != null &amp;&amp; filter.isGroupBy('eventid')" >
           eventid,
       </when>
       <otherwise>
           null as eventid,
       </otherwise>         
     </choose> 
	       <choose>
       <when test="filter != null &amp;&amp; filter.isGroupBy('site')" >
           site,
       </when>
       <otherwise>
           null as site,
       </otherwise>         
     </choose> 
	       <choose>
       <when test="filter != null &amp;&amp; filter.isGroupBy('usecaseambit')" >
           usecaseambit,
       </when>
       <otherwise>
           null as usecaseambit,
       </otherwise>         
     </choose> 
	       <choose>
       <when test="filter != null &amp;&amp; filter.isGroupBy('usecase')" >
           usecase,
       </when>
       <otherwise>
           null as usecase,
       </otherwise>         
     </choose> 
	       <choose>
       <when test="filter != null &amp;&amp; filter.isGroupBy('reason')" >
           reason,
       </when>
       <otherwise>
           null as reason,
       </otherwise>         
     </choose> 
	       <choose>
       <when test="filter != null &amp;&amp; filter.isGroupBy('refentityid1')" >
           refentityid1,
       </when>
       <otherwise>
           null as refentityid1,
       </otherwise>         
     </choose> 
	       <choose>
       <when test="filter != null &amp;&amp; filter.isGroupBy('refentityid2')" >
           refentityid2,
       </when>
       <otherwise>
           null as refentityid2,
       </otherwise>         
     </choose> 
	       <choose>
       <when test="filter != null &amp;&amp; filter.isGroupBy('refentityid3')" >
           refentityid3,
       </when>
       <otherwise>
           null as refentityid3,
       </otherwise>         
     </choose> 
	       <choose>
       <when test="filter != null &amp;&amp; filter.isGroupBy('refentityid4')" >
           refentityid4,
       </when>
       <otherwise>
           null as refentityid4,
       </otherwise>         
     </choose> 
	       <choose>
       <when test="filter != null &amp;&amp; filter.isGroupBy('refentityid5')" >
           refentityid5,
       </when>
       <otherwise>
           null as refentityid5,
       </otherwise>         
     </choose> 
	       <choose>
       <when test="filter != null &amp;&amp; filter.isGroupBy('refdate1')" >
           refdate1,
       </when>
       <otherwise>
           null as refdate1,
       </otherwise>         
     </choose> 
	       <choose>
       <when test="filter != null &amp;&amp; filter.isGroupBy('refdate2')" >
           refdate2,
       </when>
       <otherwise>
           null as refdate2,
       </otherwise>         
     </choose> 
	       <choose>
       <when test="filter != null &amp;&amp; filter.isGroupBy('counter1')" >
           counter1,
       </when>
       <otherwise>
           count(*) as counter1,
       </otherwise>         
     </choose> 
	       <choose>
       <when test="filter != null &amp;&amp; filter.isGroupBy('counter2')" >
           counter2,
       </when>
       <otherwise>
           null as counter2,
       </otherwise>         
     </choose> 
	       <choose>
       <when test="filter != null &amp;&amp; filter.isGroupBy('counter3')" >
           counter3,
       </when>
       <otherwise>
           null as counter3,
       </otherwise>         
     </choose> 
	       <choose>
       <when test="filter != null &amp;&amp; filter.isGroupBy('msg')" >
           msg,
       </when>
       <otherwise>
           null as msg,
       </otherwise>         
     </choose> 
	       <choose>
       <when test="filter != null &amp;&amp; filter.isGroupBy('userid')" >
           userid,
       </when>
       <otherwise>
           null as userid,
       </otherwise>         
     </choose> 
	       <choose>
       <when test="filter != null &amp;&amp; filter.isGroupBy('usersessionid')" >
           usersessionid,
       </when>
       <otherwise>
           null as usersessionid,
       </otherwise>         
     </choose> 
	       <choose>
       <when test="filter != null &amp;&amp; filter.isGroupBy('recstatus')" >
           recstatus,
       </when>
       <otherwise>
           null as recstatus,
       </otherwise>         
     </choose> 
	       <choose>
       <when test="filter != null &amp;&amp; filter.isGroupBy('rectimestamp')" >
           rectimestamp,
       </when>
       <otherwise>
           null as rectimestamp,
       </otherwise>         
     </choose> 
	       </trim>       
  </sql>
  
  <select id="selectByEventid" resultMap="BaseResultMap" parameterType="map" >
    select 
    <include refid="Base_Column_List" />
    from r3_eventlog
    where eventid = #{eventid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByEventid" parameterType="map" >
    delete
    from r3_eventlog
    where eventid = #{eventid,jdbcType=INTEGER}
  </delete>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="map" >
    select 
    <include refid="Base_Column_List" />
    from r3_eventlog    
    where  eventid = #{pk.eventid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="map">
    delete
    from r3_eventlog
    where  eventid = #{pk.eventid,jdbcType=INTEGER}
  </delete>  
  <select id="select" resultMap="BaseResultMap" parameterType="map" >
    select
    <if test="filter != null &amp;&amp; filter.distinct" >
      distinct
    </if>
    
    <choose>
       <when test="filter != null &amp;&amp; filter.groupByClause != null" >
           <include refid="GroupBy_Column_List" />
       </when>
       <otherwise>
           <include refid="Base_Column_List" />
       </otherwise>
    </choose>
        
    from r3_eventlog
    <if test="filter != null" >
      <include refid="Filter_Where_Clause" />
    </if>
    <if test="filter != null &amp;&amp; filter.groupByClause != null" >
      group by ${filter.groupByClause}
    </if>
    <if test="filter != null &amp;&amp; filter.orderByClause != null" >
      order by ${filter.orderByClause}
    </if>
    <if test="filter != null &amp;&amp; filter.limitFetch > 0" >
      limit ${filter.limitFetch}
    </if>
  </select>
  <select id="count" parameterType="map" resultType="java.lang.Integer" >
    select count(*) from r3_eventlog
    <if test="filter != null" >
      <include refid="Filter_Where_Clause" />
    </if>
  </select>  
  <delete id="delete" parameterType="map" >
    delete from r3_eventlog
    <!-- _parameter: dato che e' una map lo sostituisco con il nome del parametro in quanto non è l'unico -->
    <if test="filter != null" >
      <include refid="Filter_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="map" >
    insert into r3_eventlog (
 eventid, site, usecaseambit, usecase, reason, refentityid1, refentityid2, refentityid3, refentityid4,
 refentityid5, refdate1, refdate2, counter1, counter2, counter3, msg, userid, usersessionid,
 recstatus, rectimestamp      )
    values (
 
 #{record.eventid,jdbcType=INTEGER}, 
 #{record.site,jdbcType=VARCHAR}, 
 #{record.usecaseambit,jdbcType=VARCHAR}, 
 #{record.usecase,jdbcType=VARCHAR},
 
 #{record.reason,jdbcType=VARCHAR}, 
 #{record.refentityid1,jdbcType=VARCHAR}, 
 #{record.refentityid2,jdbcType=VARCHAR}, 
 #{record.refentityid3,jdbcType=VARCHAR},
 
 #{record.refentityid4,jdbcType=VARCHAR}, 
 #{record.refentityid5,jdbcType=VARCHAR}, 
 #{record.refdate1,jdbcType=TIMESTAMP}, 
 #{record.refdate2,jdbcType=TIMESTAMP},
 
 #{record.counter1,jdbcType=INTEGER}, 
 #{record.counter2,jdbcType=INTEGER}, 
 #{record.counter3,jdbcType=INTEGER}, 
 #{record.msg,jdbcType=VARCHAR},
 
 #{record.userid,jdbcType=VARCHAR}, 
 #{record.usersessionid,jdbcType=VARCHAR}, 
 #{record.recstatus,jdbcType=VARCHAR}, 
 #{record.rectimestamp,jdbcType=TIMESTAMP}
      )
  </insert>
  <update id="update" parameterType="map" >
    update r3_eventlog
    <set >
      <if test="record.siteDirty" >
        site = #{record.site,jdbcType=VARCHAR},
      </if>      
      <if test="record.usecaseambitDirty" >
        usecaseambit = #{record.usecaseambit,jdbcType=VARCHAR},
      </if>      
      <if test="record.usecaseDirty" >
        usecase = #{record.usecase,jdbcType=VARCHAR},
      </if>      
      <if test="record.reasonDirty" >
        reason = #{record.reason,jdbcType=VARCHAR},
      </if>      
      <if test="record.refentityid1Dirty" >
        refentityid1 = #{record.refentityid1,jdbcType=VARCHAR},
      </if>      
      <if test="record.refentityid2Dirty" >
        refentityid2 = #{record.refentityid2,jdbcType=VARCHAR},
      </if>      
      <if test="record.refentityid3Dirty" >
        refentityid3 = #{record.refentityid3,jdbcType=VARCHAR},
      </if>      
      <if test="record.refentityid4Dirty" >
        refentityid4 = #{record.refentityid4,jdbcType=VARCHAR},
      </if>      
      <if test="record.refentityid5Dirty" >
        refentityid5 = #{record.refentityid5,jdbcType=VARCHAR},
      </if>      
      <if test="record.refdate1Dirty" >
        refdate1 = #{record.refdate1,jdbcType=TIMESTAMP},
      </if>      
      <if test="record.refdate2Dirty" >
        refdate2 = #{record.refdate2,jdbcType=TIMESTAMP},
      </if>      
      <if test="record.counter1Dirty" >
        counter1 = #{record.counter1,jdbcType=INTEGER},
      </if>      
      <if test="record.counter2Dirty" >
        counter2 = #{record.counter2,jdbcType=INTEGER},
      </if>      
      <if test="record.counter3Dirty" >
        counter3 = #{record.counter3,jdbcType=INTEGER},
      </if>      
      <if test="record.msgDirty" >
        msg = #{record.msg,jdbcType=VARCHAR},
      </if>      
      <if test="record.useridDirty" >
        userid = #{record.userid,jdbcType=VARCHAR},
      </if>      
      <if test="record.usersessionidDirty" >
        usersessionid = #{record.usersessionid,jdbcType=VARCHAR},
      </if>      
      <if test="record.recstatusDirty" >
        recstatus = #{record.recstatus,jdbcType=VARCHAR},
      </if>      
      <if test="record.rectimestampDirty" >
        rectimestamp = #{record.rectimestamp,jdbcType=TIMESTAMP},
      </if>      
    </set>
    <if test="filter != null" >
      <include refid="Filter_Where_Clause" />
      <!-- Non dovrebbe servire in quanto il filter e' sempre named. -->
      <!-- <include refid="Filter_Where_Clause_4_Update" /> -->
    </if>
  </update>
  <update id="updateByPrimaryKey" parameterType="map" >
    update r3_eventlog
    <set >
      <if test="record.siteDirty" >
        site = #{record.site,jdbcType=VARCHAR},
      </if>
      <if test="record.usecaseambitDirty" >
        usecaseambit = #{record.usecaseambit,jdbcType=VARCHAR},
      </if>
      <if test="record.usecaseDirty" >
        usecase = #{record.usecase,jdbcType=VARCHAR},
      </if>
      <if test="record.reasonDirty" >
        reason = #{record.reason,jdbcType=VARCHAR},
      </if>
      <if test="record.refentityid1Dirty" >
        refentityid1 = #{record.refentityid1,jdbcType=VARCHAR},
      </if>
      <if test="record.refentityid2Dirty" >
        refentityid2 = #{record.refentityid2,jdbcType=VARCHAR},
      </if>
      <if test="record.refentityid3Dirty" >
        refentityid3 = #{record.refentityid3,jdbcType=VARCHAR},
      </if>
      <if test="record.refentityid4Dirty" >
        refentityid4 = #{record.refentityid4,jdbcType=VARCHAR},
      </if>
      <if test="record.refentityid5Dirty" >
        refentityid5 = #{record.refentityid5,jdbcType=VARCHAR},
      </if>
      <if test="record.refdate1Dirty" >
        refdate1 = #{record.refdate1,jdbcType=TIMESTAMP},
      </if>
      <if test="record.refdate2Dirty" >
        refdate2 = #{record.refdate2,jdbcType=TIMESTAMP},
      </if>
      <if test="record.counter1Dirty" >
        counter1 = #{record.counter1,jdbcType=INTEGER},
      </if>
      <if test="record.counter2Dirty" >
        counter2 = #{record.counter2,jdbcType=INTEGER},
      </if>
      <if test="record.counter3Dirty" >
        counter3 = #{record.counter3,jdbcType=INTEGER},
      </if>
      <if test="record.msgDirty" >
        msg = #{record.msg,jdbcType=VARCHAR},
      </if>
      <if test="record.useridDirty" >
        userid = #{record.userid,jdbcType=VARCHAR},
      </if>
      <if test="record.usersessionidDirty" >
        usersessionid = #{record.usersessionid,jdbcType=VARCHAR},
      </if>
      <if test="record.recstatusDirty" >
        recstatus = #{record.recstatus,jdbcType=VARCHAR},
      </if>
      <if test="record.rectimestampDirty" >
        rectimestamp = #{record.rectimestamp,jdbcType=TIMESTAMP},
      </if>
    </set>
    where  eventid = #{record.eventid,jdbcType=INTEGER}
  </update>


</mapper>
